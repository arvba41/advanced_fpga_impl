-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mmult is
generic (
    C_M_AXI_A_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_A_ID_WIDTH : INTEGER := 1;
    C_M_AXI_A_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_A_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_B_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_B_ID_WIDTH : INTEGER := 1;
    C_M_AXI_B_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_B_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_B_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_B_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_B_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_B_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_C_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_C_ID_WIDTH : INTEGER := 1;
    C_M_AXI_C_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_C_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_C_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_C_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_C_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_C_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_A_USER_VALUE : INTEGER := 0;
    C_M_AXI_A_PROT_VALUE : INTEGER := 0;
    C_M_AXI_A_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_B_USER_VALUE : INTEGER := 0;
    C_M_AXI_B_PROT_VALUE : INTEGER := 0;
    C_M_AXI_B_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_C_USER_VALUE : INTEGER := 0;
    C_M_AXI_C_PROT_VALUE : INTEGER := 0;
    C_M_AXI_C_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_A_AWVALID : OUT STD_LOGIC;
    m_axi_A_AWREADY : IN STD_LOGIC;
    m_axi_A_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_A_ADDR_WIDTH-1 downto 0);
    m_axi_A_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_ID_WIDTH-1 downto 0);
    m_axi_A_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_A_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_AWUSER_WIDTH-1 downto 0);
    m_axi_A_WVALID : OUT STD_LOGIC;
    m_axi_A_WREADY : IN STD_LOGIC;
    m_axi_A_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_A_DATA_WIDTH-1 downto 0);
    m_axi_A_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_A_DATA_WIDTH/8-1 downto 0);
    m_axi_A_WLAST : OUT STD_LOGIC;
    m_axi_A_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_ID_WIDTH-1 downto 0);
    m_axi_A_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_WUSER_WIDTH-1 downto 0);
    m_axi_A_ARVALID : OUT STD_LOGIC;
    m_axi_A_ARREADY : IN STD_LOGIC;
    m_axi_A_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_A_ADDR_WIDTH-1 downto 0);
    m_axi_A_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_ID_WIDTH-1 downto 0);
    m_axi_A_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_A_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_ARUSER_WIDTH-1 downto 0);
    m_axi_A_RVALID : IN STD_LOGIC;
    m_axi_A_RREADY : OUT STD_LOGIC;
    m_axi_A_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_A_DATA_WIDTH-1 downto 0);
    m_axi_A_RLAST : IN STD_LOGIC;
    m_axi_A_RID : IN STD_LOGIC_VECTOR (C_M_AXI_A_ID_WIDTH-1 downto 0);
    m_axi_A_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_A_RUSER_WIDTH-1 downto 0);
    m_axi_A_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BVALID : IN STD_LOGIC;
    m_axi_A_BREADY : OUT STD_LOGIC;
    m_axi_A_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BID : IN STD_LOGIC_VECTOR (C_M_AXI_A_ID_WIDTH-1 downto 0);
    m_axi_A_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_A_BUSER_WIDTH-1 downto 0);
    m_axi_B_AWVALID : OUT STD_LOGIC;
    m_axi_B_AWREADY : IN STD_LOGIC;
    m_axi_B_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_B_ADDR_WIDTH-1 downto 0);
    m_axi_B_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_B_ID_WIDTH-1 downto 0);
    m_axi_B_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_B_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_B_AWUSER_WIDTH-1 downto 0);
    m_axi_B_WVALID : OUT STD_LOGIC;
    m_axi_B_WREADY : IN STD_LOGIC;
    m_axi_B_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_B_DATA_WIDTH-1 downto 0);
    m_axi_B_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_B_DATA_WIDTH/8-1 downto 0);
    m_axi_B_WLAST : OUT STD_LOGIC;
    m_axi_B_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_B_ID_WIDTH-1 downto 0);
    m_axi_B_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_B_WUSER_WIDTH-1 downto 0);
    m_axi_B_ARVALID : OUT STD_LOGIC;
    m_axi_B_ARREADY : IN STD_LOGIC;
    m_axi_B_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_B_ADDR_WIDTH-1 downto 0);
    m_axi_B_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_B_ID_WIDTH-1 downto 0);
    m_axi_B_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_B_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_B_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_B_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_B_ARUSER_WIDTH-1 downto 0);
    m_axi_B_RVALID : IN STD_LOGIC;
    m_axi_B_RREADY : OUT STD_LOGIC;
    m_axi_B_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_B_DATA_WIDTH-1 downto 0);
    m_axi_B_RLAST : IN STD_LOGIC;
    m_axi_B_RID : IN STD_LOGIC_VECTOR (C_M_AXI_B_ID_WIDTH-1 downto 0);
    m_axi_B_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_B_RUSER_WIDTH-1 downto 0);
    m_axi_B_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_BVALID : IN STD_LOGIC;
    m_axi_B_BREADY : OUT STD_LOGIC;
    m_axi_B_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_B_BID : IN STD_LOGIC_VECTOR (C_M_AXI_B_ID_WIDTH-1 downto 0);
    m_axi_B_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_B_BUSER_WIDTH-1 downto 0);
    m_axi_C_AWVALID : OUT STD_LOGIC;
    m_axi_C_AWREADY : IN STD_LOGIC;
    m_axi_C_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_C_ADDR_WIDTH-1 downto 0);
    m_axi_C_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_C_ID_WIDTH-1 downto 0);
    m_axi_C_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_C_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_C_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_C_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_C_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_C_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_C_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_C_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_C_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_C_AWUSER_WIDTH-1 downto 0);
    m_axi_C_WVALID : OUT STD_LOGIC;
    m_axi_C_WREADY : IN STD_LOGIC;
    m_axi_C_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_C_DATA_WIDTH-1 downto 0);
    m_axi_C_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_C_DATA_WIDTH/8-1 downto 0);
    m_axi_C_WLAST : OUT STD_LOGIC;
    m_axi_C_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_C_ID_WIDTH-1 downto 0);
    m_axi_C_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_C_WUSER_WIDTH-1 downto 0);
    m_axi_C_ARVALID : OUT STD_LOGIC;
    m_axi_C_ARREADY : IN STD_LOGIC;
    m_axi_C_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_C_ADDR_WIDTH-1 downto 0);
    m_axi_C_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_C_ID_WIDTH-1 downto 0);
    m_axi_C_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_C_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_C_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_C_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_C_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_C_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_C_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_C_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_C_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_C_ARUSER_WIDTH-1 downto 0);
    m_axi_C_RVALID : IN STD_LOGIC;
    m_axi_C_RREADY : OUT STD_LOGIC;
    m_axi_C_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_C_DATA_WIDTH-1 downto 0);
    m_axi_C_RLAST : IN STD_LOGIC;
    m_axi_C_RID : IN STD_LOGIC_VECTOR (C_M_AXI_C_ID_WIDTH-1 downto 0);
    m_axi_C_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_C_RUSER_WIDTH-1 downto 0);
    m_axi_C_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_C_BVALID : IN STD_LOGIC;
    m_axi_C_BREADY : OUT STD_LOGIC;
    m_axi_C_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_C_BID : IN STD_LOGIC_VECTOR (C_M_AXI_C_ID_WIDTH-1 downto 0);
    m_axi_C_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_C_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of mmult is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mmult_mmult,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020i-clg400-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.833000,HLS_SYN_LAT=13713,HLS_SYN_TPT=none,HLS_SYN_MEM=204,HLS_SYN_DSP=0,HLS_SYN_FF=39338,HLS_SYN_LUT=53416,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal A_offset : STD_LOGIC_VECTOR (63 downto 0);
    signal B_offset : STD_LOGIC_VECTOR (63 downto 0);
    signal C_offset : STD_LOGIC_VECTOR (63 downto 0);
    signal A_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal C_offset_read_reg_502 : STD_LOGIC_VECTOR (63 downto 0);
    signal B_offset_read_reg_507 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_offset_read_reg_512 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln43_fu_415_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln43_reg_520 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sext_ln46_mid2_v_reg_525 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln53_fu_446_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln53_reg_531 : STD_LOGIC_VECTOR (0 downto 0);
    signal Abuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_ce0 : STD_LOGIC;
    signal Abuf_we0 : STD_LOGIC;
    signal Abuf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_ce1 : STD_LOGIC;
    signal Abuf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_ce2 : STD_LOGIC;
    signal Abuf_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_ce3 : STD_LOGIC;
    signal Abuf_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_1_ce0 : STD_LOGIC;
    signal Abuf_1_we0 : STD_LOGIC;
    signal Abuf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_1_ce1 : STD_LOGIC;
    signal Abuf_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_1_ce2 : STD_LOGIC;
    signal Abuf_1_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_1_ce3 : STD_LOGIC;
    signal Abuf_1_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_2_ce0 : STD_LOGIC;
    signal Abuf_2_we0 : STD_LOGIC;
    signal Abuf_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_2_ce1 : STD_LOGIC;
    signal Abuf_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_2_ce2 : STD_LOGIC;
    signal Abuf_2_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_2_ce3 : STD_LOGIC;
    signal Abuf_2_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_3_ce0 : STD_LOGIC;
    signal Abuf_3_we0 : STD_LOGIC;
    signal Abuf_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_3_ce1 : STD_LOGIC;
    signal Abuf_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_3_ce2 : STD_LOGIC;
    signal Abuf_3_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_3_ce3 : STD_LOGIC;
    signal Abuf_3_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_4_ce0 : STD_LOGIC;
    signal Abuf_4_we0 : STD_LOGIC;
    signal Abuf_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_4_ce1 : STD_LOGIC;
    signal Abuf_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_4_ce2 : STD_LOGIC;
    signal Abuf_4_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_4_ce3 : STD_LOGIC;
    signal Abuf_4_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_5_ce0 : STD_LOGIC;
    signal Abuf_5_we0 : STD_LOGIC;
    signal Abuf_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_5_ce1 : STD_LOGIC;
    signal Abuf_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_5_ce2 : STD_LOGIC;
    signal Abuf_5_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_5_ce3 : STD_LOGIC;
    signal Abuf_5_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_6_ce0 : STD_LOGIC;
    signal Abuf_6_we0 : STD_LOGIC;
    signal Abuf_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_6_ce1 : STD_LOGIC;
    signal Abuf_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_6_ce2 : STD_LOGIC;
    signal Abuf_6_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_6_ce3 : STD_LOGIC;
    signal Abuf_6_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_7_ce0 : STD_LOGIC;
    signal Abuf_7_we0 : STD_LOGIC;
    signal Abuf_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_7_ce1 : STD_LOGIC;
    signal Abuf_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_7_ce2 : STD_LOGIC;
    signal Abuf_7_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_7_ce3 : STD_LOGIC;
    signal Abuf_7_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_8_ce0 : STD_LOGIC;
    signal Abuf_8_we0 : STD_LOGIC;
    signal Abuf_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_8_ce1 : STD_LOGIC;
    signal Abuf_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_8_ce2 : STD_LOGIC;
    signal Abuf_8_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_8_ce3 : STD_LOGIC;
    signal Abuf_8_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_9_ce0 : STD_LOGIC;
    signal Abuf_9_we0 : STD_LOGIC;
    signal Abuf_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_9_ce1 : STD_LOGIC;
    signal Abuf_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_9_ce2 : STD_LOGIC;
    signal Abuf_9_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_9_ce3 : STD_LOGIC;
    signal Abuf_9_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_10_ce0 : STD_LOGIC;
    signal Abuf_10_we0 : STD_LOGIC;
    signal Abuf_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_10_ce1 : STD_LOGIC;
    signal Abuf_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_10_ce2 : STD_LOGIC;
    signal Abuf_10_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_10_ce3 : STD_LOGIC;
    signal Abuf_10_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_11_ce0 : STD_LOGIC;
    signal Abuf_11_we0 : STD_LOGIC;
    signal Abuf_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_11_ce1 : STD_LOGIC;
    signal Abuf_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_11_ce2 : STD_LOGIC;
    signal Abuf_11_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_11_ce3 : STD_LOGIC;
    signal Abuf_11_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_12_ce0 : STD_LOGIC;
    signal Abuf_12_we0 : STD_LOGIC;
    signal Abuf_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_12_ce1 : STD_LOGIC;
    signal Abuf_12_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_12_ce2 : STD_LOGIC;
    signal Abuf_12_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_12_ce3 : STD_LOGIC;
    signal Abuf_12_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_13_ce0 : STD_LOGIC;
    signal Abuf_13_we0 : STD_LOGIC;
    signal Abuf_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_13_ce1 : STD_LOGIC;
    signal Abuf_13_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_13_ce2 : STD_LOGIC;
    signal Abuf_13_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_13_ce3 : STD_LOGIC;
    signal Abuf_13_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_14_ce0 : STD_LOGIC;
    signal Abuf_14_we0 : STD_LOGIC;
    signal Abuf_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_14_ce1 : STD_LOGIC;
    signal Abuf_14_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_14_ce2 : STD_LOGIC;
    signal Abuf_14_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_14_ce3 : STD_LOGIC;
    signal Abuf_14_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Abuf_15_ce0 : STD_LOGIC;
    signal Abuf_15_we0 : STD_LOGIC;
    signal Abuf_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_15_ce1 : STD_LOGIC;
    signal Abuf_15_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_15_ce2 : STD_LOGIC;
    signal Abuf_15_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Abuf_15_ce3 : STD_LOGIC;
    signal Abuf_15_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_ce0 : STD_LOGIC;
    signal Bbuf_we0 : STD_LOGIC;
    signal Bbuf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_ce1 : STD_LOGIC;
    signal Bbuf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_ce2 : STD_LOGIC;
    signal Bbuf_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_ce3 : STD_LOGIC;
    signal Bbuf_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_1_ce0 : STD_LOGIC;
    signal Bbuf_1_we0 : STD_LOGIC;
    signal Bbuf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_1_ce1 : STD_LOGIC;
    signal Bbuf_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_1_ce2 : STD_LOGIC;
    signal Bbuf_1_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_1_ce3 : STD_LOGIC;
    signal Bbuf_1_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_2_ce0 : STD_LOGIC;
    signal Bbuf_2_we0 : STD_LOGIC;
    signal Bbuf_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_2_ce1 : STD_LOGIC;
    signal Bbuf_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_2_ce2 : STD_LOGIC;
    signal Bbuf_2_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_2_ce3 : STD_LOGIC;
    signal Bbuf_2_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_3_ce0 : STD_LOGIC;
    signal Bbuf_3_we0 : STD_LOGIC;
    signal Bbuf_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_3_ce1 : STD_LOGIC;
    signal Bbuf_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_3_ce2 : STD_LOGIC;
    signal Bbuf_3_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_3_ce3 : STD_LOGIC;
    signal Bbuf_3_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_4_ce0 : STD_LOGIC;
    signal Bbuf_4_we0 : STD_LOGIC;
    signal Bbuf_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_4_ce1 : STD_LOGIC;
    signal Bbuf_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_4_ce2 : STD_LOGIC;
    signal Bbuf_4_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_4_ce3 : STD_LOGIC;
    signal Bbuf_4_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_5_ce0 : STD_LOGIC;
    signal Bbuf_5_we0 : STD_LOGIC;
    signal Bbuf_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_5_ce1 : STD_LOGIC;
    signal Bbuf_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_5_ce2 : STD_LOGIC;
    signal Bbuf_5_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_5_ce3 : STD_LOGIC;
    signal Bbuf_5_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_6_ce0 : STD_LOGIC;
    signal Bbuf_6_we0 : STD_LOGIC;
    signal Bbuf_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_6_ce1 : STD_LOGIC;
    signal Bbuf_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_6_ce2 : STD_LOGIC;
    signal Bbuf_6_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_6_ce3 : STD_LOGIC;
    signal Bbuf_6_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_7_ce0 : STD_LOGIC;
    signal Bbuf_7_we0 : STD_LOGIC;
    signal Bbuf_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_7_ce1 : STD_LOGIC;
    signal Bbuf_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_7_ce2 : STD_LOGIC;
    signal Bbuf_7_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_7_ce3 : STD_LOGIC;
    signal Bbuf_7_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_8_ce0 : STD_LOGIC;
    signal Bbuf_8_we0 : STD_LOGIC;
    signal Bbuf_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_8_ce1 : STD_LOGIC;
    signal Bbuf_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_8_ce2 : STD_LOGIC;
    signal Bbuf_8_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_8_ce3 : STD_LOGIC;
    signal Bbuf_8_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_9_ce0 : STD_LOGIC;
    signal Bbuf_9_we0 : STD_LOGIC;
    signal Bbuf_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_9_ce1 : STD_LOGIC;
    signal Bbuf_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_9_ce2 : STD_LOGIC;
    signal Bbuf_9_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_9_ce3 : STD_LOGIC;
    signal Bbuf_9_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_10_ce0 : STD_LOGIC;
    signal Bbuf_10_we0 : STD_LOGIC;
    signal Bbuf_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_10_ce1 : STD_LOGIC;
    signal Bbuf_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_10_ce2 : STD_LOGIC;
    signal Bbuf_10_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_10_ce3 : STD_LOGIC;
    signal Bbuf_10_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_11_ce0 : STD_LOGIC;
    signal Bbuf_11_we0 : STD_LOGIC;
    signal Bbuf_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_11_ce1 : STD_LOGIC;
    signal Bbuf_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_11_ce2 : STD_LOGIC;
    signal Bbuf_11_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_11_ce3 : STD_LOGIC;
    signal Bbuf_11_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_12_ce0 : STD_LOGIC;
    signal Bbuf_12_we0 : STD_LOGIC;
    signal Bbuf_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_12_ce1 : STD_LOGIC;
    signal Bbuf_12_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_12_ce2 : STD_LOGIC;
    signal Bbuf_12_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_12_ce3 : STD_LOGIC;
    signal Bbuf_12_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_13_ce0 : STD_LOGIC;
    signal Bbuf_13_we0 : STD_LOGIC;
    signal Bbuf_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_13_ce1 : STD_LOGIC;
    signal Bbuf_13_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_13_ce2 : STD_LOGIC;
    signal Bbuf_13_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_13_ce3 : STD_LOGIC;
    signal Bbuf_13_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_14_ce0 : STD_LOGIC;
    signal Bbuf_14_we0 : STD_LOGIC;
    signal Bbuf_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_14_ce1 : STD_LOGIC;
    signal Bbuf_14_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_14_ce2 : STD_LOGIC;
    signal Bbuf_14_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_14_ce3 : STD_LOGIC;
    signal Bbuf_14_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Bbuf_15_ce0 : STD_LOGIC;
    signal Bbuf_15_we0 : STD_LOGIC;
    signal Bbuf_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_15_ce1 : STD_LOGIC;
    signal Bbuf_15_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_15_ce2 : STD_LOGIC;
    signal Bbuf_15_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Bbuf_15_ce3 : STD_LOGIC;
    signal Bbuf_15_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_done : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_idle : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_ready : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WLAST : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_RREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_BREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_done : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_idle : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_ready : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WLAST : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_RREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_BREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_we0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_done : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_idle : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_ready : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WLAST : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARVALID : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_RREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_BREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce3 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce0 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce1 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce2 : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce3 : STD_LOGIC;
    signal A_AWREADY : STD_LOGIC;
    signal A_WREADY : STD_LOGIC;
    signal A_ARVALID : STD_LOGIC;
    signal A_ARREADY : STD_LOGIC;
    signal A_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal A_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal A_RVALID : STD_LOGIC;
    signal A_RREADY : STD_LOGIC;
    signal A_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal A_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal A_BVALID : STD_LOGIC;
    signal B_AWREADY : STD_LOGIC;
    signal B_WREADY : STD_LOGIC;
    signal B_ARVALID : STD_LOGIC;
    signal B_ARREADY : STD_LOGIC;
    signal B_RVALID : STD_LOGIC;
    signal B_RREADY : STD_LOGIC;
    signal B_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal B_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal B_BVALID : STD_LOGIC;
    signal C_AWVALID : STD_LOGIC;
    signal C_AWREADY : STD_LOGIC;
    signal C_WVALID : STD_LOGIC;
    signal C_WREADY : STD_LOGIC;
    signal C_ARREADY : STD_LOGIC;
    signal C_RVALID : STD_LOGIC;
    signal C_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal C_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal C_BVALID : STD_LOGIC;
    signal C_BREADY : STD_LOGIC;
    signal grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start_reg : STD_LOGIC := '0';
    signal grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal sext_ln43_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_fu_98 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln44_fu_450_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln43_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_102 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln43_1_fu_407_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten153_fu_106 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln43_2_fu_375_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln44_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln43_fu_387_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln46_mid2_v_v_v_v_v_fu_419_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln43_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln43_1_fu_431_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln43_fu_399_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mmult_mmult_Pipeline_LOOPA1_LOOPA2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_A_AWVALID : OUT STD_LOGIC;
        m_axi_A_AWREADY : IN STD_LOGIC;
        m_axi_A_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_WVALID : OUT STD_LOGIC;
        m_axi_A_WREADY : IN STD_LOGIC;
        m_axi_A_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_WLAST : OUT STD_LOGIC;
        m_axi_A_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_ARVALID : OUT STD_LOGIC;
        m_axi_A_ARREADY : IN STD_LOGIC;
        m_axi_A_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_RVALID : IN STD_LOGIC;
        m_axi_A_RREADY : OUT STD_LOGIC;
        m_axi_A_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_RLAST : IN STD_LOGIC;
        m_axi_A_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_A_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_BVALID : IN STD_LOGIC;
        m_axi_A_BREADY : OUT STD_LOGIC;
        m_axi_A_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln43 : IN STD_LOGIC_VECTOR (61 downto 0);
        Abuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_ce0 : OUT STD_LOGIC;
        Abuf_we0 : OUT STD_LOGIC;
        Abuf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_1_ce0 : OUT STD_LOGIC;
        Abuf_1_we0 : OUT STD_LOGIC;
        Abuf_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_2_ce0 : OUT STD_LOGIC;
        Abuf_2_we0 : OUT STD_LOGIC;
        Abuf_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_3_ce0 : OUT STD_LOGIC;
        Abuf_3_we0 : OUT STD_LOGIC;
        Abuf_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_4_ce0 : OUT STD_LOGIC;
        Abuf_4_we0 : OUT STD_LOGIC;
        Abuf_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_5_ce0 : OUT STD_LOGIC;
        Abuf_5_we0 : OUT STD_LOGIC;
        Abuf_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_6_ce0 : OUT STD_LOGIC;
        Abuf_6_we0 : OUT STD_LOGIC;
        Abuf_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_7_ce0 : OUT STD_LOGIC;
        Abuf_7_we0 : OUT STD_LOGIC;
        Abuf_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_8_ce0 : OUT STD_LOGIC;
        Abuf_8_we0 : OUT STD_LOGIC;
        Abuf_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_9_ce0 : OUT STD_LOGIC;
        Abuf_9_we0 : OUT STD_LOGIC;
        Abuf_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_10_ce0 : OUT STD_LOGIC;
        Abuf_10_we0 : OUT STD_LOGIC;
        Abuf_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_11_ce0 : OUT STD_LOGIC;
        Abuf_11_we0 : OUT STD_LOGIC;
        Abuf_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_12_ce0 : OUT STD_LOGIC;
        Abuf_12_we0 : OUT STD_LOGIC;
        Abuf_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_13_ce0 : OUT STD_LOGIC;
        Abuf_13_we0 : OUT STD_LOGIC;
        Abuf_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_14_ce0 : OUT STD_LOGIC;
        Abuf_14_we0 : OUT STD_LOGIC;
        Abuf_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Abuf_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_15_ce0 : OUT STD_LOGIC;
        Abuf_15_we0 : OUT STD_LOGIC;
        Abuf_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mmult_mmult_Pipeline_LOOPB1_LOOPB2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_B_AWVALID : OUT STD_LOGIC;
        m_axi_B_AWREADY : IN STD_LOGIC;
        m_axi_B_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_WVALID : OUT STD_LOGIC;
        m_axi_B_WREADY : IN STD_LOGIC;
        m_axi_B_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_WLAST : OUT STD_LOGIC;
        m_axi_B_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_ARVALID : OUT STD_LOGIC;
        m_axi_B_ARREADY : IN STD_LOGIC;
        m_axi_B_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_RVALID : IN STD_LOGIC;
        m_axi_B_RREADY : OUT STD_LOGIC;
        m_axi_B_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_RLAST : IN STD_LOGIC;
        m_axi_B_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_B_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_BVALID : IN STD_LOGIC;
        m_axi_B_BREADY : OUT STD_LOGIC;
        m_axi_B_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Bbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_ce0 : OUT STD_LOGIC;
        Bbuf_we0 : OUT STD_LOGIC;
        Bbuf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_1_ce0 : OUT STD_LOGIC;
        Bbuf_1_we0 : OUT STD_LOGIC;
        Bbuf_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_2_ce0 : OUT STD_LOGIC;
        Bbuf_2_we0 : OUT STD_LOGIC;
        Bbuf_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_3_ce0 : OUT STD_LOGIC;
        Bbuf_3_we0 : OUT STD_LOGIC;
        Bbuf_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_4_ce0 : OUT STD_LOGIC;
        Bbuf_4_we0 : OUT STD_LOGIC;
        Bbuf_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_5_ce0 : OUT STD_LOGIC;
        Bbuf_5_we0 : OUT STD_LOGIC;
        Bbuf_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_6_ce0 : OUT STD_LOGIC;
        Bbuf_6_we0 : OUT STD_LOGIC;
        Bbuf_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_7_ce0 : OUT STD_LOGIC;
        Bbuf_7_we0 : OUT STD_LOGIC;
        Bbuf_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_8_ce0 : OUT STD_LOGIC;
        Bbuf_8_we0 : OUT STD_LOGIC;
        Bbuf_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_9_ce0 : OUT STD_LOGIC;
        Bbuf_9_we0 : OUT STD_LOGIC;
        Bbuf_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_10_ce0 : OUT STD_LOGIC;
        Bbuf_10_we0 : OUT STD_LOGIC;
        Bbuf_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_11_ce0 : OUT STD_LOGIC;
        Bbuf_11_we0 : OUT STD_LOGIC;
        Bbuf_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_12_ce0 : OUT STD_LOGIC;
        Bbuf_12_we0 : OUT STD_LOGIC;
        Bbuf_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_13_ce0 : OUT STD_LOGIC;
        Bbuf_13_we0 : OUT STD_LOGIC;
        Bbuf_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_14_ce0 : OUT STD_LOGIC;
        Bbuf_14_we0 : OUT STD_LOGIC;
        Bbuf_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_15_ce0 : OUT STD_LOGIC;
        Bbuf_15_we0 : OUT STD_LOGIC;
        Bbuf_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (0 downto 0);
        B_offset : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component mmult_mmult_Pipeline_LOOP3_LOOP4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_C_AWVALID : OUT STD_LOGIC;
        m_axi_C_AWREADY : IN STD_LOGIC;
        m_axi_C_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_C_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_C_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_WVALID : OUT STD_LOGIC;
        m_axi_C_WREADY : IN STD_LOGIC;
        m_axi_C_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_C_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_WLAST : OUT STD_LOGIC;
        m_axi_C_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_ARVALID : OUT STD_LOGIC;
        m_axi_C_ARREADY : IN STD_LOGIC;
        m_axi_C_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_C_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_C_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_RVALID : IN STD_LOGIC;
        m_axi_C_RREADY : OUT STD_LOGIC;
        m_axi_C_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_C_RLAST : IN STD_LOGIC;
        m_axi_C_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_C_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_BVALID : IN STD_LOGIC;
        m_axi_C_BREADY : OUT STD_LOGIC;
        m_axi_C_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        Bbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_ce0 : OUT STD_LOGIC;
        Bbuf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_ce1 : OUT STD_LOGIC;
        Bbuf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_ce2 : OUT STD_LOGIC;
        Bbuf_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_ce3 : OUT STD_LOGIC;
        Bbuf_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_1_ce0 : OUT STD_LOGIC;
        Bbuf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_1_ce1 : OUT STD_LOGIC;
        Bbuf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_1_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_1_ce2 : OUT STD_LOGIC;
        Bbuf_1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_1_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_1_ce3 : OUT STD_LOGIC;
        Bbuf_1_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_2_ce0 : OUT STD_LOGIC;
        Bbuf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_2_ce1 : OUT STD_LOGIC;
        Bbuf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_2_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_2_ce2 : OUT STD_LOGIC;
        Bbuf_2_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_2_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_2_ce3 : OUT STD_LOGIC;
        Bbuf_2_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_3_ce0 : OUT STD_LOGIC;
        Bbuf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_3_ce1 : OUT STD_LOGIC;
        Bbuf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_3_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_3_ce2 : OUT STD_LOGIC;
        Bbuf_3_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_3_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_3_ce3 : OUT STD_LOGIC;
        Bbuf_3_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_4_ce0 : OUT STD_LOGIC;
        Bbuf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_4_ce1 : OUT STD_LOGIC;
        Bbuf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_4_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_4_ce2 : OUT STD_LOGIC;
        Bbuf_4_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_4_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_4_ce3 : OUT STD_LOGIC;
        Bbuf_4_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_5_ce0 : OUT STD_LOGIC;
        Bbuf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_5_ce1 : OUT STD_LOGIC;
        Bbuf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_5_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_5_ce2 : OUT STD_LOGIC;
        Bbuf_5_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_5_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_5_ce3 : OUT STD_LOGIC;
        Bbuf_5_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_6_ce0 : OUT STD_LOGIC;
        Bbuf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_6_ce1 : OUT STD_LOGIC;
        Bbuf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_6_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_6_ce2 : OUT STD_LOGIC;
        Bbuf_6_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_6_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_6_ce3 : OUT STD_LOGIC;
        Bbuf_6_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_7_ce0 : OUT STD_LOGIC;
        Bbuf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_7_ce1 : OUT STD_LOGIC;
        Bbuf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_7_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_7_ce2 : OUT STD_LOGIC;
        Bbuf_7_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_7_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_7_ce3 : OUT STD_LOGIC;
        Bbuf_7_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_8_ce0 : OUT STD_LOGIC;
        Bbuf_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_8_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_8_ce1 : OUT STD_LOGIC;
        Bbuf_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_8_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_8_ce2 : OUT STD_LOGIC;
        Bbuf_8_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_8_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_8_ce3 : OUT STD_LOGIC;
        Bbuf_8_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_9_ce0 : OUT STD_LOGIC;
        Bbuf_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_9_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_9_ce1 : OUT STD_LOGIC;
        Bbuf_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_9_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_9_ce2 : OUT STD_LOGIC;
        Bbuf_9_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_9_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_9_ce3 : OUT STD_LOGIC;
        Bbuf_9_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_10_ce0 : OUT STD_LOGIC;
        Bbuf_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_10_ce1 : OUT STD_LOGIC;
        Bbuf_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_10_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_10_ce2 : OUT STD_LOGIC;
        Bbuf_10_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_10_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_10_ce3 : OUT STD_LOGIC;
        Bbuf_10_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_11_ce0 : OUT STD_LOGIC;
        Bbuf_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_11_ce1 : OUT STD_LOGIC;
        Bbuf_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_11_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_11_ce2 : OUT STD_LOGIC;
        Bbuf_11_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_11_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_11_ce3 : OUT STD_LOGIC;
        Bbuf_11_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_12_ce0 : OUT STD_LOGIC;
        Bbuf_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_12_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_12_ce1 : OUT STD_LOGIC;
        Bbuf_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_12_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_12_ce2 : OUT STD_LOGIC;
        Bbuf_12_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_12_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_12_ce3 : OUT STD_LOGIC;
        Bbuf_12_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_13_ce0 : OUT STD_LOGIC;
        Bbuf_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_13_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_13_ce1 : OUT STD_LOGIC;
        Bbuf_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_13_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_13_ce2 : OUT STD_LOGIC;
        Bbuf_13_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_13_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_13_ce3 : OUT STD_LOGIC;
        Bbuf_13_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_14_ce0 : OUT STD_LOGIC;
        Bbuf_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_14_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_14_ce1 : OUT STD_LOGIC;
        Bbuf_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_14_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_14_ce2 : OUT STD_LOGIC;
        Bbuf_14_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_14_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_14_ce3 : OUT STD_LOGIC;
        Bbuf_14_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_15_ce0 : OUT STD_LOGIC;
        Bbuf_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_15_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_15_ce1 : OUT STD_LOGIC;
        Bbuf_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_15_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_15_ce2 : OUT STD_LOGIC;
        Bbuf_15_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Bbuf_15_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Bbuf_15_ce3 : OUT STD_LOGIC;
        Bbuf_15_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_ce0 : OUT STD_LOGIC;
        Abuf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_ce1 : OUT STD_LOGIC;
        Abuf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_ce2 : OUT STD_LOGIC;
        Abuf_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_ce3 : OUT STD_LOGIC;
        Abuf_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_1_ce0 : OUT STD_LOGIC;
        Abuf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_1_ce1 : OUT STD_LOGIC;
        Abuf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_1_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_1_ce2 : OUT STD_LOGIC;
        Abuf_1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_1_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_1_ce3 : OUT STD_LOGIC;
        Abuf_1_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_2_ce0 : OUT STD_LOGIC;
        Abuf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_2_ce1 : OUT STD_LOGIC;
        Abuf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_2_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_2_ce2 : OUT STD_LOGIC;
        Abuf_2_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_2_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_2_ce3 : OUT STD_LOGIC;
        Abuf_2_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_3_ce0 : OUT STD_LOGIC;
        Abuf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_3_ce1 : OUT STD_LOGIC;
        Abuf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_3_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_3_ce2 : OUT STD_LOGIC;
        Abuf_3_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_3_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_3_ce3 : OUT STD_LOGIC;
        Abuf_3_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_4_ce0 : OUT STD_LOGIC;
        Abuf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_4_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_4_ce1 : OUT STD_LOGIC;
        Abuf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_4_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_4_ce2 : OUT STD_LOGIC;
        Abuf_4_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_4_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_4_ce3 : OUT STD_LOGIC;
        Abuf_4_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_5_ce0 : OUT STD_LOGIC;
        Abuf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_5_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_5_ce1 : OUT STD_LOGIC;
        Abuf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_5_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_5_ce2 : OUT STD_LOGIC;
        Abuf_5_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_5_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_5_ce3 : OUT STD_LOGIC;
        Abuf_5_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_6_ce0 : OUT STD_LOGIC;
        Abuf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_6_ce1 : OUT STD_LOGIC;
        Abuf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_6_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_6_ce2 : OUT STD_LOGIC;
        Abuf_6_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_6_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_6_ce3 : OUT STD_LOGIC;
        Abuf_6_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_7_ce0 : OUT STD_LOGIC;
        Abuf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_7_ce1 : OUT STD_LOGIC;
        Abuf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_7_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_7_ce2 : OUT STD_LOGIC;
        Abuf_7_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_7_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_7_ce3 : OUT STD_LOGIC;
        Abuf_7_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_8_ce0 : OUT STD_LOGIC;
        Abuf_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_8_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_8_ce1 : OUT STD_LOGIC;
        Abuf_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_8_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_8_ce2 : OUT STD_LOGIC;
        Abuf_8_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_8_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_8_ce3 : OUT STD_LOGIC;
        Abuf_8_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_9_ce0 : OUT STD_LOGIC;
        Abuf_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_9_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_9_ce1 : OUT STD_LOGIC;
        Abuf_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_9_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_9_ce2 : OUT STD_LOGIC;
        Abuf_9_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_9_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_9_ce3 : OUT STD_LOGIC;
        Abuf_9_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_10_ce0 : OUT STD_LOGIC;
        Abuf_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_10_ce1 : OUT STD_LOGIC;
        Abuf_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_10_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_10_ce2 : OUT STD_LOGIC;
        Abuf_10_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_10_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_10_ce3 : OUT STD_LOGIC;
        Abuf_10_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_11_ce0 : OUT STD_LOGIC;
        Abuf_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_11_ce1 : OUT STD_LOGIC;
        Abuf_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_11_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_11_ce2 : OUT STD_LOGIC;
        Abuf_11_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_11_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_11_ce3 : OUT STD_LOGIC;
        Abuf_11_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_12_ce0 : OUT STD_LOGIC;
        Abuf_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_12_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_12_ce1 : OUT STD_LOGIC;
        Abuf_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_12_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_12_ce2 : OUT STD_LOGIC;
        Abuf_12_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_12_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_12_ce3 : OUT STD_LOGIC;
        Abuf_12_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_13_ce0 : OUT STD_LOGIC;
        Abuf_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_13_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_13_ce1 : OUT STD_LOGIC;
        Abuf_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_13_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_13_ce2 : OUT STD_LOGIC;
        Abuf_13_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_13_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_13_ce3 : OUT STD_LOGIC;
        Abuf_13_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_14_ce0 : OUT STD_LOGIC;
        Abuf_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_14_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_14_ce1 : OUT STD_LOGIC;
        Abuf_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_14_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_14_ce2 : OUT STD_LOGIC;
        Abuf_14_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_14_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_14_ce3 : OUT STD_LOGIC;
        Abuf_14_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_15_ce0 : OUT STD_LOGIC;
        Abuf_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_15_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_15_ce1 : OUT STD_LOGIC;
        Abuf_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_15_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_15_ce2 : OUT STD_LOGIC;
        Abuf_15_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        Abuf_15_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Abuf_15_ce3 : OUT STD_LOGIC;
        Abuf_15_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty_13 : IN STD_LOGIC_VECTOR (0 downto 0);
        empty : IN STD_LOGIC_VECTOR (0 downto 0);
        C_offset : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component mmult_Abuf_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mmult_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        A_offset : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_offset : OUT STD_LOGIC_VECTOR (63 downto 0);
        C_offset : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component mmult_A_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component mmult_B_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component mmult_C_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    Abuf_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_address0,
        ce0 => Abuf_ce0,
        we0 => Abuf_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_d0,
        q0 => Abuf_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address1,
        ce1 => Abuf_ce1,
        q1 => Abuf_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address2,
        ce2 => Abuf_ce2,
        q2 => Abuf_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address3,
        ce3 => Abuf_ce3,
        q3 => Abuf_q3);

    Abuf_1_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_1_address0,
        ce0 => Abuf_1_ce0,
        we0 => Abuf_1_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_d0,
        q0 => Abuf_1_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address1,
        ce1 => Abuf_1_ce1,
        q1 => Abuf_1_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address2,
        ce2 => Abuf_1_ce2,
        q2 => Abuf_1_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address3,
        ce3 => Abuf_1_ce3,
        q3 => Abuf_1_q3);

    Abuf_2_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_2_address0,
        ce0 => Abuf_2_ce0,
        we0 => Abuf_2_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_d0,
        q0 => Abuf_2_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address1,
        ce1 => Abuf_2_ce1,
        q1 => Abuf_2_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address2,
        ce2 => Abuf_2_ce2,
        q2 => Abuf_2_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address3,
        ce3 => Abuf_2_ce3,
        q3 => Abuf_2_q3);

    Abuf_3_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_3_address0,
        ce0 => Abuf_3_ce0,
        we0 => Abuf_3_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_d0,
        q0 => Abuf_3_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address1,
        ce1 => Abuf_3_ce1,
        q1 => Abuf_3_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address2,
        ce2 => Abuf_3_ce2,
        q2 => Abuf_3_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address3,
        ce3 => Abuf_3_ce3,
        q3 => Abuf_3_q3);

    Abuf_4_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_4_address0,
        ce0 => Abuf_4_ce0,
        we0 => Abuf_4_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_d0,
        q0 => Abuf_4_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address1,
        ce1 => Abuf_4_ce1,
        q1 => Abuf_4_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address2,
        ce2 => Abuf_4_ce2,
        q2 => Abuf_4_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address3,
        ce3 => Abuf_4_ce3,
        q3 => Abuf_4_q3);

    Abuf_5_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_5_address0,
        ce0 => Abuf_5_ce0,
        we0 => Abuf_5_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_d0,
        q0 => Abuf_5_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address1,
        ce1 => Abuf_5_ce1,
        q1 => Abuf_5_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address2,
        ce2 => Abuf_5_ce2,
        q2 => Abuf_5_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address3,
        ce3 => Abuf_5_ce3,
        q3 => Abuf_5_q3);

    Abuf_6_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_6_address0,
        ce0 => Abuf_6_ce0,
        we0 => Abuf_6_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_d0,
        q0 => Abuf_6_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address1,
        ce1 => Abuf_6_ce1,
        q1 => Abuf_6_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address2,
        ce2 => Abuf_6_ce2,
        q2 => Abuf_6_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address3,
        ce3 => Abuf_6_ce3,
        q3 => Abuf_6_q3);

    Abuf_7_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_7_address0,
        ce0 => Abuf_7_ce0,
        we0 => Abuf_7_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_d0,
        q0 => Abuf_7_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address1,
        ce1 => Abuf_7_ce1,
        q1 => Abuf_7_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address2,
        ce2 => Abuf_7_ce2,
        q2 => Abuf_7_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address3,
        ce3 => Abuf_7_ce3,
        q3 => Abuf_7_q3);

    Abuf_8_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_8_address0,
        ce0 => Abuf_8_ce0,
        we0 => Abuf_8_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_d0,
        q0 => Abuf_8_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address1,
        ce1 => Abuf_8_ce1,
        q1 => Abuf_8_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address2,
        ce2 => Abuf_8_ce2,
        q2 => Abuf_8_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address3,
        ce3 => Abuf_8_ce3,
        q3 => Abuf_8_q3);

    Abuf_9_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_9_address0,
        ce0 => Abuf_9_ce0,
        we0 => Abuf_9_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_d0,
        q0 => Abuf_9_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address1,
        ce1 => Abuf_9_ce1,
        q1 => Abuf_9_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address2,
        ce2 => Abuf_9_ce2,
        q2 => Abuf_9_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address3,
        ce3 => Abuf_9_ce3,
        q3 => Abuf_9_q3);

    Abuf_10_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_10_address0,
        ce0 => Abuf_10_ce0,
        we0 => Abuf_10_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_d0,
        q0 => Abuf_10_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address1,
        ce1 => Abuf_10_ce1,
        q1 => Abuf_10_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address2,
        ce2 => Abuf_10_ce2,
        q2 => Abuf_10_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address3,
        ce3 => Abuf_10_ce3,
        q3 => Abuf_10_q3);

    Abuf_11_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_11_address0,
        ce0 => Abuf_11_ce0,
        we0 => Abuf_11_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_d0,
        q0 => Abuf_11_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address1,
        ce1 => Abuf_11_ce1,
        q1 => Abuf_11_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address2,
        ce2 => Abuf_11_ce2,
        q2 => Abuf_11_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address3,
        ce3 => Abuf_11_ce3,
        q3 => Abuf_11_q3);

    Abuf_12_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_12_address0,
        ce0 => Abuf_12_ce0,
        we0 => Abuf_12_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_d0,
        q0 => Abuf_12_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address1,
        ce1 => Abuf_12_ce1,
        q1 => Abuf_12_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address2,
        ce2 => Abuf_12_ce2,
        q2 => Abuf_12_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address3,
        ce3 => Abuf_12_ce3,
        q3 => Abuf_12_q3);

    Abuf_13_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_13_address0,
        ce0 => Abuf_13_ce0,
        we0 => Abuf_13_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_d0,
        q0 => Abuf_13_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address1,
        ce1 => Abuf_13_ce1,
        q1 => Abuf_13_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address2,
        ce2 => Abuf_13_ce2,
        q2 => Abuf_13_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address3,
        ce3 => Abuf_13_ce3,
        q3 => Abuf_13_q3);

    Abuf_14_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_14_address0,
        ce0 => Abuf_14_ce0,
        we0 => Abuf_14_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_d0,
        q0 => Abuf_14_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address1,
        ce1 => Abuf_14_ce1,
        q1 => Abuf_14_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address2,
        ce2 => Abuf_14_ce2,
        q2 => Abuf_14_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address3,
        ce3 => Abuf_14_ce3,
        q3 => Abuf_14_q3);

    Abuf_15_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Abuf_15_address0,
        ce0 => Abuf_15_ce0,
        we0 => Abuf_15_we0,
        d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_d0,
        q0 => Abuf_15_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address1,
        ce1 => Abuf_15_ce1,
        q1 => Abuf_15_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address2,
        ce2 => Abuf_15_ce2,
        q2 => Abuf_15_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address3,
        ce3 => Abuf_15_ce3,
        q3 => Abuf_15_q3);

    Bbuf_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_address0,
        ce0 => Bbuf_ce0,
        we0 => Bbuf_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_d0,
        q0 => Bbuf_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address1,
        ce1 => Bbuf_ce1,
        q1 => Bbuf_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address2,
        ce2 => Bbuf_ce2,
        q2 => Bbuf_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address3,
        ce3 => Bbuf_ce3,
        q3 => Bbuf_q3);

    Bbuf_1_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_1_address0,
        ce0 => Bbuf_1_ce0,
        we0 => Bbuf_1_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_d0,
        q0 => Bbuf_1_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address1,
        ce1 => Bbuf_1_ce1,
        q1 => Bbuf_1_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address2,
        ce2 => Bbuf_1_ce2,
        q2 => Bbuf_1_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address3,
        ce3 => Bbuf_1_ce3,
        q3 => Bbuf_1_q3);

    Bbuf_2_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_2_address0,
        ce0 => Bbuf_2_ce0,
        we0 => Bbuf_2_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_d0,
        q0 => Bbuf_2_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address1,
        ce1 => Bbuf_2_ce1,
        q1 => Bbuf_2_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address2,
        ce2 => Bbuf_2_ce2,
        q2 => Bbuf_2_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address3,
        ce3 => Bbuf_2_ce3,
        q3 => Bbuf_2_q3);

    Bbuf_3_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_3_address0,
        ce0 => Bbuf_3_ce0,
        we0 => Bbuf_3_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_d0,
        q0 => Bbuf_3_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address1,
        ce1 => Bbuf_3_ce1,
        q1 => Bbuf_3_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address2,
        ce2 => Bbuf_3_ce2,
        q2 => Bbuf_3_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address3,
        ce3 => Bbuf_3_ce3,
        q3 => Bbuf_3_q3);

    Bbuf_4_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_4_address0,
        ce0 => Bbuf_4_ce0,
        we0 => Bbuf_4_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_d0,
        q0 => Bbuf_4_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address1,
        ce1 => Bbuf_4_ce1,
        q1 => Bbuf_4_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address2,
        ce2 => Bbuf_4_ce2,
        q2 => Bbuf_4_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address3,
        ce3 => Bbuf_4_ce3,
        q3 => Bbuf_4_q3);

    Bbuf_5_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_5_address0,
        ce0 => Bbuf_5_ce0,
        we0 => Bbuf_5_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_d0,
        q0 => Bbuf_5_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address1,
        ce1 => Bbuf_5_ce1,
        q1 => Bbuf_5_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address2,
        ce2 => Bbuf_5_ce2,
        q2 => Bbuf_5_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address3,
        ce3 => Bbuf_5_ce3,
        q3 => Bbuf_5_q3);

    Bbuf_6_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_6_address0,
        ce0 => Bbuf_6_ce0,
        we0 => Bbuf_6_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_d0,
        q0 => Bbuf_6_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address1,
        ce1 => Bbuf_6_ce1,
        q1 => Bbuf_6_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address2,
        ce2 => Bbuf_6_ce2,
        q2 => Bbuf_6_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address3,
        ce3 => Bbuf_6_ce3,
        q3 => Bbuf_6_q3);

    Bbuf_7_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_7_address0,
        ce0 => Bbuf_7_ce0,
        we0 => Bbuf_7_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_d0,
        q0 => Bbuf_7_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address1,
        ce1 => Bbuf_7_ce1,
        q1 => Bbuf_7_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address2,
        ce2 => Bbuf_7_ce2,
        q2 => Bbuf_7_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address3,
        ce3 => Bbuf_7_ce3,
        q3 => Bbuf_7_q3);

    Bbuf_8_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_8_address0,
        ce0 => Bbuf_8_ce0,
        we0 => Bbuf_8_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_d0,
        q0 => Bbuf_8_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address1,
        ce1 => Bbuf_8_ce1,
        q1 => Bbuf_8_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address2,
        ce2 => Bbuf_8_ce2,
        q2 => Bbuf_8_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address3,
        ce3 => Bbuf_8_ce3,
        q3 => Bbuf_8_q3);

    Bbuf_9_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_9_address0,
        ce0 => Bbuf_9_ce0,
        we0 => Bbuf_9_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_d0,
        q0 => Bbuf_9_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address1,
        ce1 => Bbuf_9_ce1,
        q1 => Bbuf_9_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address2,
        ce2 => Bbuf_9_ce2,
        q2 => Bbuf_9_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address3,
        ce3 => Bbuf_9_ce3,
        q3 => Bbuf_9_q3);

    Bbuf_10_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_10_address0,
        ce0 => Bbuf_10_ce0,
        we0 => Bbuf_10_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_d0,
        q0 => Bbuf_10_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address1,
        ce1 => Bbuf_10_ce1,
        q1 => Bbuf_10_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address2,
        ce2 => Bbuf_10_ce2,
        q2 => Bbuf_10_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address3,
        ce3 => Bbuf_10_ce3,
        q3 => Bbuf_10_q3);

    Bbuf_11_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_11_address0,
        ce0 => Bbuf_11_ce0,
        we0 => Bbuf_11_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_d0,
        q0 => Bbuf_11_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address1,
        ce1 => Bbuf_11_ce1,
        q1 => Bbuf_11_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address2,
        ce2 => Bbuf_11_ce2,
        q2 => Bbuf_11_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address3,
        ce3 => Bbuf_11_ce3,
        q3 => Bbuf_11_q3);

    Bbuf_12_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_12_address0,
        ce0 => Bbuf_12_ce0,
        we0 => Bbuf_12_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_d0,
        q0 => Bbuf_12_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address1,
        ce1 => Bbuf_12_ce1,
        q1 => Bbuf_12_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address2,
        ce2 => Bbuf_12_ce2,
        q2 => Bbuf_12_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address3,
        ce3 => Bbuf_12_ce3,
        q3 => Bbuf_12_q3);

    Bbuf_13_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_13_address0,
        ce0 => Bbuf_13_ce0,
        we0 => Bbuf_13_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_d0,
        q0 => Bbuf_13_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address1,
        ce1 => Bbuf_13_ce1,
        q1 => Bbuf_13_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address2,
        ce2 => Bbuf_13_ce2,
        q2 => Bbuf_13_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address3,
        ce3 => Bbuf_13_ce3,
        q3 => Bbuf_13_q3);

    Bbuf_14_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_14_address0,
        ce0 => Bbuf_14_ce0,
        we0 => Bbuf_14_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_d0,
        q0 => Bbuf_14_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address1,
        ce1 => Bbuf_14_ce1,
        q1 => Bbuf_14_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address2,
        ce2 => Bbuf_14_ce2,
        q2 => Bbuf_14_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address3,
        ce3 => Bbuf_14_ce3,
        q3 => Bbuf_14_q3);

    Bbuf_15_U : component mmult_Abuf_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Bbuf_15_address0,
        ce0 => Bbuf_15_ce0,
        we0 => Bbuf_15_we0,
        d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_d0,
        q0 => Bbuf_15_q0,
        address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address1,
        ce1 => Bbuf_15_ce1,
        q1 => Bbuf_15_q1,
        address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address2,
        ce2 => Bbuf_15_ce2,
        q2 => Bbuf_15_q2,
        address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address3,
        ce3 => Bbuf_15_ce3,
        q3 => Bbuf_15_q3);

    grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263 : component mmult_mmult_Pipeline_LOOPA1_LOOPA2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start,
        ap_done => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_done,
        ap_idle => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_idle,
        ap_ready => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_ready,
        m_axi_A_AWVALID => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWVALID,
        m_axi_A_AWREADY => ap_const_logic_0,
        m_axi_A_AWADDR => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWADDR,
        m_axi_A_AWID => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWID,
        m_axi_A_AWLEN => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWLEN,
        m_axi_A_AWSIZE => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWSIZE,
        m_axi_A_AWBURST => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWBURST,
        m_axi_A_AWLOCK => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWLOCK,
        m_axi_A_AWCACHE => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWCACHE,
        m_axi_A_AWPROT => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWPROT,
        m_axi_A_AWQOS => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWQOS,
        m_axi_A_AWREGION => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWREGION,
        m_axi_A_AWUSER => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_AWUSER,
        m_axi_A_WVALID => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WVALID,
        m_axi_A_WREADY => ap_const_logic_0,
        m_axi_A_WDATA => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WDATA,
        m_axi_A_WSTRB => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WSTRB,
        m_axi_A_WLAST => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WLAST,
        m_axi_A_WID => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WID,
        m_axi_A_WUSER => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_WUSER,
        m_axi_A_ARVALID => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARVALID,
        m_axi_A_ARREADY => A_ARREADY,
        m_axi_A_ARADDR => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARADDR,
        m_axi_A_ARID => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARID,
        m_axi_A_ARLEN => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARLEN,
        m_axi_A_ARSIZE => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARSIZE,
        m_axi_A_ARBURST => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARBURST,
        m_axi_A_ARLOCK => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARLOCK,
        m_axi_A_ARCACHE => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARCACHE,
        m_axi_A_ARPROT => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARPROT,
        m_axi_A_ARQOS => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARQOS,
        m_axi_A_ARREGION => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARREGION,
        m_axi_A_ARUSER => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARUSER,
        m_axi_A_RVALID => A_RVALID,
        m_axi_A_RREADY => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_RREADY,
        m_axi_A_RDATA => A_RDATA,
        m_axi_A_RLAST => ap_const_logic_0,
        m_axi_A_RID => ap_const_lv1_0,
        m_axi_A_RFIFONUM => A_RFIFONUM,
        m_axi_A_RUSER => ap_const_lv1_0,
        m_axi_A_RRESP => ap_const_lv2_0,
        m_axi_A_BVALID => ap_const_logic_0,
        m_axi_A_BREADY => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_BREADY,
        m_axi_A_BRESP => ap_const_lv2_0,
        m_axi_A_BID => ap_const_lv1_0,
        m_axi_A_BUSER => ap_const_lv1_0,
        sext_ln43 => sext_ln46_mid2_v_reg_525,
        Abuf_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_address0,
        Abuf_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_ce0,
        Abuf_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_we0,
        Abuf_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_d0,
        Abuf_1_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_address0,
        Abuf_1_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_ce0,
        Abuf_1_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_we0,
        Abuf_1_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_d0,
        Abuf_2_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_address0,
        Abuf_2_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_ce0,
        Abuf_2_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_we0,
        Abuf_2_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_d0,
        Abuf_3_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_address0,
        Abuf_3_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_ce0,
        Abuf_3_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_we0,
        Abuf_3_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_d0,
        Abuf_4_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_address0,
        Abuf_4_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_ce0,
        Abuf_4_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_we0,
        Abuf_4_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_d0,
        Abuf_5_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_address0,
        Abuf_5_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_ce0,
        Abuf_5_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_we0,
        Abuf_5_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_d0,
        Abuf_6_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_address0,
        Abuf_6_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_ce0,
        Abuf_6_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_we0,
        Abuf_6_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_d0,
        Abuf_7_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_address0,
        Abuf_7_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_ce0,
        Abuf_7_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_we0,
        Abuf_7_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_d0,
        Abuf_8_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_address0,
        Abuf_8_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_ce0,
        Abuf_8_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_we0,
        Abuf_8_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_d0,
        Abuf_9_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_address0,
        Abuf_9_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_ce0,
        Abuf_9_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_we0,
        Abuf_9_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_d0,
        Abuf_10_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_address0,
        Abuf_10_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_ce0,
        Abuf_10_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_we0,
        Abuf_10_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_d0,
        Abuf_11_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_address0,
        Abuf_11_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_ce0,
        Abuf_11_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_we0,
        Abuf_11_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_d0,
        Abuf_12_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_address0,
        Abuf_12_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_ce0,
        Abuf_12_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_we0,
        Abuf_12_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_d0,
        Abuf_13_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_address0,
        Abuf_13_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_ce0,
        Abuf_13_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_we0,
        Abuf_13_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_d0,
        Abuf_14_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_address0,
        Abuf_14_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_ce0,
        Abuf_14_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_we0,
        Abuf_14_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_d0,
        Abuf_15_address0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_address0,
        Abuf_15_ce0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_ce0,
        Abuf_15_we0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_we0,
        Abuf_15_d0 => grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_d0);

    grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286 : component mmult_mmult_Pipeline_LOOPB1_LOOPB2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start,
        ap_done => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_done,
        ap_idle => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_idle,
        ap_ready => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_ready,
        m_axi_B_AWVALID => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWVALID,
        m_axi_B_AWREADY => ap_const_logic_0,
        m_axi_B_AWADDR => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWADDR,
        m_axi_B_AWID => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWID,
        m_axi_B_AWLEN => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWLEN,
        m_axi_B_AWSIZE => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWSIZE,
        m_axi_B_AWBURST => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWBURST,
        m_axi_B_AWLOCK => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWLOCK,
        m_axi_B_AWCACHE => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWCACHE,
        m_axi_B_AWPROT => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWPROT,
        m_axi_B_AWQOS => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWQOS,
        m_axi_B_AWREGION => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWREGION,
        m_axi_B_AWUSER => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_AWUSER,
        m_axi_B_WVALID => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WVALID,
        m_axi_B_WREADY => ap_const_logic_0,
        m_axi_B_WDATA => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WDATA,
        m_axi_B_WSTRB => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WSTRB,
        m_axi_B_WLAST => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WLAST,
        m_axi_B_WID => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WID,
        m_axi_B_WUSER => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_WUSER,
        m_axi_B_ARVALID => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARVALID,
        m_axi_B_ARREADY => B_ARREADY,
        m_axi_B_ARADDR => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARADDR,
        m_axi_B_ARID => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARID,
        m_axi_B_ARLEN => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARLEN,
        m_axi_B_ARSIZE => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARSIZE,
        m_axi_B_ARBURST => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARBURST,
        m_axi_B_ARLOCK => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARLOCK,
        m_axi_B_ARCACHE => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARCACHE,
        m_axi_B_ARPROT => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARPROT,
        m_axi_B_ARQOS => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARQOS,
        m_axi_B_ARREGION => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARREGION,
        m_axi_B_ARUSER => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARUSER,
        m_axi_B_RVALID => B_RVALID,
        m_axi_B_RREADY => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_RREADY,
        m_axi_B_RDATA => B_RDATA,
        m_axi_B_RLAST => ap_const_logic_0,
        m_axi_B_RID => ap_const_lv1_0,
        m_axi_B_RFIFONUM => B_RFIFONUM,
        m_axi_B_RUSER => ap_const_lv1_0,
        m_axi_B_RRESP => ap_const_lv2_0,
        m_axi_B_BVALID => ap_const_logic_0,
        m_axi_B_BREADY => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_BREADY,
        m_axi_B_BRESP => ap_const_lv2_0,
        m_axi_B_BID => ap_const_lv1_0,
        m_axi_B_BUSER => ap_const_lv1_0,
        Bbuf_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_address0,
        Bbuf_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_ce0,
        Bbuf_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_we0,
        Bbuf_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_d0,
        Bbuf_1_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_address0,
        Bbuf_1_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_ce0,
        Bbuf_1_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_we0,
        Bbuf_1_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_d0,
        Bbuf_2_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_address0,
        Bbuf_2_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_ce0,
        Bbuf_2_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_we0,
        Bbuf_2_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_d0,
        Bbuf_3_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_address0,
        Bbuf_3_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_ce0,
        Bbuf_3_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_we0,
        Bbuf_3_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_d0,
        Bbuf_4_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_address0,
        Bbuf_4_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_ce0,
        Bbuf_4_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_we0,
        Bbuf_4_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_d0,
        Bbuf_5_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_address0,
        Bbuf_5_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_ce0,
        Bbuf_5_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_we0,
        Bbuf_5_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_d0,
        Bbuf_6_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_address0,
        Bbuf_6_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_ce0,
        Bbuf_6_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_we0,
        Bbuf_6_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_d0,
        Bbuf_7_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_address0,
        Bbuf_7_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_ce0,
        Bbuf_7_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_we0,
        Bbuf_7_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_d0,
        Bbuf_8_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_address0,
        Bbuf_8_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_ce0,
        Bbuf_8_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_we0,
        Bbuf_8_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_d0,
        Bbuf_9_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_address0,
        Bbuf_9_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_ce0,
        Bbuf_9_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_we0,
        Bbuf_9_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_d0,
        Bbuf_10_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_address0,
        Bbuf_10_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_ce0,
        Bbuf_10_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_we0,
        Bbuf_10_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_d0,
        Bbuf_11_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_address0,
        Bbuf_11_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_ce0,
        Bbuf_11_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_we0,
        Bbuf_11_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_d0,
        Bbuf_12_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_address0,
        Bbuf_12_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_ce0,
        Bbuf_12_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_we0,
        Bbuf_12_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_d0,
        Bbuf_13_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_address0,
        Bbuf_13_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_ce0,
        Bbuf_13_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_we0,
        Bbuf_13_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_d0,
        Bbuf_14_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_address0,
        Bbuf_14_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_ce0,
        Bbuf_14_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_we0,
        Bbuf_14_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_d0,
        Bbuf_15_address0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_address0,
        Bbuf_15_ce0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_ce0,
        Bbuf_15_we0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_we0,
        Bbuf_15_d0 => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_d0,
        empty => trunc_ln53_reg_531,
        B_offset => B_offset_read_reg_507);

    grp_mmult_Pipeline_LOOP3_LOOP4_fu_310 : component mmult_mmult_Pipeline_LOOP3_LOOP4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start,
        ap_done => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_done,
        ap_idle => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_idle,
        ap_ready => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_ready,
        m_axi_C_AWVALID => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWVALID,
        m_axi_C_AWREADY => C_AWREADY,
        m_axi_C_AWADDR => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWADDR,
        m_axi_C_AWID => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWID,
        m_axi_C_AWLEN => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWLEN,
        m_axi_C_AWSIZE => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWSIZE,
        m_axi_C_AWBURST => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWBURST,
        m_axi_C_AWLOCK => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWLOCK,
        m_axi_C_AWCACHE => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWCACHE,
        m_axi_C_AWPROT => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWPROT,
        m_axi_C_AWQOS => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWQOS,
        m_axi_C_AWREGION => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWREGION,
        m_axi_C_AWUSER => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWUSER,
        m_axi_C_WVALID => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WVALID,
        m_axi_C_WREADY => C_WREADY,
        m_axi_C_WDATA => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WDATA,
        m_axi_C_WSTRB => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WSTRB,
        m_axi_C_WLAST => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WLAST,
        m_axi_C_WID => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WID,
        m_axi_C_WUSER => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WUSER,
        m_axi_C_ARVALID => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARVALID,
        m_axi_C_ARREADY => ap_const_logic_0,
        m_axi_C_ARADDR => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARADDR,
        m_axi_C_ARID => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARID,
        m_axi_C_ARLEN => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARLEN,
        m_axi_C_ARSIZE => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARSIZE,
        m_axi_C_ARBURST => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARBURST,
        m_axi_C_ARLOCK => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARLOCK,
        m_axi_C_ARCACHE => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARCACHE,
        m_axi_C_ARPROT => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARPROT,
        m_axi_C_ARQOS => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARQOS,
        m_axi_C_ARREGION => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARREGION,
        m_axi_C_ARUSER => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_ARUSER,
        m_axi_C_RVALID => ap_const_logic_0,
        m_axi_C_RREADY => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_RREADY,
        m_axi_C_RDATA => ap_const_lv32_0,
        m_axi_C_RLAST => ap_const_logic_0,
        m_axi_C_RID => ap_const_lv1_0,
        m_axi_C_RFIFONUM => ap_const_lv9_0,
        m_axi_C_RUSER => ap_const_lv1_0,
        m_axi_C_RRESP => ap_const_lv2_0,
        m_axi_C_BVALID => C_BVALID,
        m_axi_C_BREADY => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_BREADY,
        m_axi_C_BRESP => ap_const_lv2_0,
        m_axi_C_BID => ap_const_lv1_0,
        m_axi_C_BUSER => ap_const_lv1_0,
        Bbuf_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address0,
        Bbuf_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce0,
        Bbuf_q0 => Bbuf_q0,
        Bbuf_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address1,
        Bbuf_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce1,
        Bbuf_q1 => Bbuf_q1,
        Bbuf_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address2,
        Bbuf_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce2,
        Bbuf_q2 => Bbuf_q2,
        Bbuf_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address3,
        Bbuf_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce3,
        Bbuf_q3 => Bbuf_q3,
        Bbuf_1_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address0,
        Bbuf_1_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce0,
        Bbuf_1_q0 => Bbuf_1_q0,
        Bbuf_1_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address1,
        Bbuf_1_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce1,
        Bbuf_1_q1 => Bbuf_1_q1,
        Bbuf_1_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address2,
        Bbuf_1_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce2,
        Bbuf_1_q2 => Bbuf_1_q2,
        Bbuf_1_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address3,
        Bbuf_1_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce3,
        Bbuf_1_q3 => Bbuf_1_q3,
        Bbuf_2_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address0,
        Bbuf_2_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce0,
        Bbuf_2_q0 => Bbuf_2_q0,
        Bbuf_2_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address1,
        Bbuf_2_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce1,
        Bbuf_2_q1 => Bbuf_2_q1,
        Bbuf_2_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address2,
        Bbuf_2_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce2,
        Bbuf_2_q2 => Bbuf_2_q2,
        Bbuf_2_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address3,
        Bbuf_2_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce3,
        Bbuf_2_q3 => Bbuf_2_q3,
        Bbuf_3_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address0,
        Bbuf_3_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce0,
        Bbuf_3_q0 => Bbuf_3_q0,
        Bbuf_3_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address1,
        Bbuf_3_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce1,
        Bbuf_3_q1 => Bbuf_3_q1,
        Bbuf_3_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address2,
        Bbuf_3_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce2,
        Bbuf_3_q2 => Bbuf_3_q2,
        Bbuf_3_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address3,
        Bbuf_3_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce3,
        Bbuf_3_q3 => Bbuf_3_q3,
        Bbuf_4_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address0,
        Bbuf_4_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce0,
        Bbuf_4_q0 => Bbuf_4_q0,
        Bbuf_4_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address1,
        Bbuf_4_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce1,
        Bbuf_4_q1 => Bbuf_4_q1,
        Bbuf_4_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address2,
        Bbuf_4_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce2,
        Bbuf_4_q2 => Bbuf_4_q2,
        Bbuf_4_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address3,
        Bbuf_4_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce3,
        Bbuf_4_q3 => Bbuf_4_q3,
        Bbuf_5_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address0,
        Bbuf_5_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce0,
        Bbuf_5_q0 => Bbuf_5_q0,
        Bbuf_5_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address1,
        Bbuf_5_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce1,
        Bbuf_5_q1 => Bbuf_5_q1,
        Bbuf_5_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address2,
        Bbuf_5_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce2,
        Bbuf_5_q2 => Bbuf_5_q2,
        Bbuf_5_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address3,
        Bbuf_5_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce3,
        Bbuf_5_q3 => Bbuf_5_q3,
        Bbuf_6_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address0,
        Bbuf_6_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce0,
        Bbuf_6_q0 => Bbuf_6_q0,
        Bbuf_6_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address1,
        Bbuf_6_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce1,
        Bbuf_6_q1 => Bbuf_6_q1,
        Bbuf_6_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address2,
        Bbuf_6_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce2,
        Bbuf_6_q2 => Bbuf_6_q2,
        Bbuf_6_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address3,
        Bbuf_6_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce3,
        Bbuf_6_q3 => Bbuf_6_q3,
        Bbuf_7_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address0,
        Bbuf_7_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce0,
        Bbuf_7_q0 => Bbuf_7_q0,
        Bbuf_7_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address1,
        Bbuf_7_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce1,
        Bbuf_7_q1 => Bbuf_7_q1,
        Bbuf_7_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address2,
        Bbuf_7_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce2,
        Bbuf_7_q2 => Bbuf_7_q2,
        Bbuf_7_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address3,
        Bbuf_7_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce3,
        Bbuf_7_q3 => Bbuf_7_q3,
        Bbuf_8_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address0,
        Bbuf_8_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce0,
        Bbuf_8_q0 => Bbuf_8_q0,
        Bbuf_8_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address1,
        Bbuf_8_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce1,
        Bbuf_8_q1 => Bbuf_8_q1,
        Bbuf_8_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address2,
        Bbuf_8_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce2,
        Bbuf_8_q2 => Bbuf_8_q2,
        Bbuf_8_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address3,
        Bbuf_8_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce3,
        Bbuf_8_q3 => Bbuf_8_q3,
        Bbuf_9_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address0,
        Bbuf_9_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce0,
        Bbuf_9_q0 => Bbuf_9_q0,
        Bbuf_9_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address1,
        Bbuf_9_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce1,
        Bbuf_9_q1 => Bbuf_9_q1,
        Bbuf_9_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address2,
        Bbuf_9_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce2,
        Bbuf_9_q2 => Bbuf_9_q2,
        Bbuf_9_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address3,
        Bbuf_9_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce3,
        Bbuf_9_q3 => Bbuf_9_q3,
        Bbuf_10_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address0,
        Bbuf_10_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce0,
        Bbuf_10_q0 => Bbuf_10_q0,
        Bbuf_10_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address1,
        Bbuf_10_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce1,
        Bbuf_10_q1 => Bbuf_10_q1,
        Bbuf_10_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address2,
        Bbuf_10_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce2,
        Bbuf_10_q2 => Bbuf_10_q2,
        Bbuf_10_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address3,
        Bbuf_10_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce3,
        Bbuf_10_q3 => Bbuf_10_q3,
        Bbuf_11_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address0,
        Bbuf_11_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce0,
        Bbuf_11_q0 => Bbuf_11_q0,
        Bbuf_11_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address1,
        Bbuf_11_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce1,
        Bbuf_11_q1 => Bbuf_11_q1,
        Bbuf_11_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address2,
        Bbuf_11_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce2,
        Bbuf_11_q2 => Bbuf_11_q2,
        Bbuf_11_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address3,
        Bbuf_11_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce3,
        Bbuf_11_q3 => Bbuf_11_q3,
        Bbuf_12_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address0,
        Bbuf_12_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce0,
        Bbuf_12_q0 => Bbuf_12_q0,
        Bbuf_12_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address1,
        Bbuf_12_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce1,
        Bbuf_12_q1 => Bbuf_12_q1,
        Bbuf_12_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address2,
        Bbuf_12_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce2,
        Bbuf_12_q2 => Bbuf_12_q2,
        Bbuf_12_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address3,
        Bbuf_12_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce3,
        Bbuf_12_q3 => Bbuf_12_q3,
        Bbuf_13_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address0,
        Bbuf_13_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce0,
        Bbuf_13_q0 => Bbuf_13_q0,
        Bbuf_13_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address1,
        Bbuf_13_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce1,
        Bbuf_13_q1 => Bbuf_13_q1,
        Bbuf_13_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address2,
        Bbuf_13_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce2,
        Bbuf_13_q2 => Bbuf_13_q2,
        Bbuf_13_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address3,
        Bbuf_13_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce3,
        Bbuf_13_q3 => Bbuf_13_q3,
        Bbuf_14_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address0,
        Bbuf_14_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce0,
        Bbuf_14_q0 => Bbuf_14_q0,
        Bbuf_14_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address1,
        Bbuf_14_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce1,
        Bbuf_14_q1 => Bbuf_14_q1,
        Bbuf_14_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address2,
        Bbuf_14_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce2,
        Bbuf_14_q2 => Bbuf_14_q2,
        Bbuf_14_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address3,
        Bbuf_14_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce3,
        Bbuf_14_q3 => Bbuf_14_q3,
        Bbuf_15_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address0,
        Bbuf_15_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce0,
        Bbuf_15_q0 => Bbuf_15_q0,
        Bbuf_15_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address1,
        Bbuf_15_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce1,
        Bbuf_15_q1 => Bbuf_15_q1,
        Bbuf_15_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address2,
        Bbuf_15_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce2,
        Bbuf_15_q2 => Bbuf_15_q2,
        Bbuf_15_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address3,
        Bbuf_15_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce3,
        Bbuf_15_q3 => Bbuf_15_q3,
        Abuf_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address0,
        Abuf_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce0,
        Abuf_q0 => Abuf_q0,
        Abuf_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address1,
        Abuf_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce1,
        Abuf_q1 => Abuf_q1,
        Abuf_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address2,
        Abuf_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce2,
        Abuf_q2 => Abuf_q2,
        Abuf_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address3,
        Abuf_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce3,
        Abuf_q3 => Abuf_q3,
        Abuf_1_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address0,
        Abuf_1_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce0,
        Abuf_1_q0 => Abuf_1_q0,
        Abuf_1_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address1,
        Abuf_1_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce1,
        Abuf_1_q1 => Abuf_1_q1,
        Abuf_1_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address2,
        Abuf_1_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce2,
        Abuf_1_q2 => Abuf_1_q2,
        Abuf_1_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address3,
        Abuf_1_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce3,
        Abuf_1_q3 => Abuf_1_q3,
        Abuf_2_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address0,
        Abuf_2_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce0,
        Abuf_2_q0 => Abuf_2_q0,
        Abuf_2_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address1,
        Abuf_2_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce1,
        Abuf_2_q1 => Abuf_2_q1,
        Abuf_2_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address2,
        Abuf_2_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce2,
        Abuf_2_q2 => Abuf_2_q2,
        Abuf_2_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address3,
        Abuf_2_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce3,
        Abuf_2_q3 => Abuf_2_q3,
        Abuf_3_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address0,
        Abuf_3_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce0,
        Abuf_3_q0 => Abuf_3_q0,
        Abuf_3_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address1,
        Abuf_3_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce1,
        Abuf_3_q1 => Abuf_3_q1,
        Abuf_3_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address2,
        Abuf_3_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce2,
        Abuf_3_q2 => Abuf_3_q2,
        Abuf_3_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address3,
        Abuf_3_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce3,
        Abuf_3_q3 => Abuf_3_q3,
        Abuf_4_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address0,
        Abuf_4_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce0,
        Abuf_4_q0 => Abuf_4_q0,
        Abuf_4_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address1,
        Abuf_4_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce1,
        Abuf_4_q1 => Abuf_4_q1,
        Abuf_4_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address2,
        Abuf_4_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce2,
        Abuf_4_q2 => Abuf_4_q2,
        Abuf_4_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address3,
        Abuf_4_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce3,
        Abuf_4_q3 => Abuf_4_q3,
        Abuf_5_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address0,
        Abuf_5_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce0,
        Abuf_5_q0 => Abuf_5_q0,
        Abuf_5_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address1,
        Abuf_5_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce1,
        Abuf_5_q1 => Abuf_5_q1,
        Abuf_5_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address2,
        Abuf_5_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce2,
        Abuf_5_q2 => Abuf_5_q2,
        Abuf_5_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address3,
        Abuf_5_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce3,
        Abuf_5_q3 => Abuf_5_q3,
        Abuf_6_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address0,
        Abuf_6_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce0,
        Abuf_6_q0 => Abuf_6_q0,
        Abuf_6_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address1,
        Abuf_6_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce1,
        Abuf_6_q1 => Abuf_6_q1,
        Abuf_6_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address2,
        Abuf_6_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce2,
        Abuf_6_q2 => Abuf_6_q2,
        Abuf_6_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address3,
        Abuf_6_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce3,
        Abuf_6_q3 => Abuf_6_q3,
        Abuf_7_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address0,
        Abuf_7_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce0,
        Abuf_7_q0 => Abuf_7_q0,
        Abuf_7_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address1,
        Abuf_7_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce1,
        Abuf_7_q1 => Abuf_7_q1,
        Abuf_7_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address2,
        Abuf_7_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce2,
        Abuf_7_q2 => Abuf_7_q2,
        Abuf_7_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address3,
        Abuf_7_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce3,
        Abuf_7_q3 => Abuf_7_q3,
        Abuf_8_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address0,
        Abuf_8_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce0,
        Abuf_8_q0 => Abuf_8_q0,
        Abuf_8_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address1,
        Abuf_8_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce1,
        Abuf_8_q1 => Abuf_8_q1,
        Abuf_8_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address2,
        Abuf_8_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce2,
        Abuf_8_q2 => Abuf_8_q2,
        Abuf_8_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address3,
        Abuf_8_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce3,
        Abuf_8_q3 => Abuf_8_q3,
        Abuf_9_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address0,
        Abuf_9_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce0,
        Abuf_9_q0 => Abuf_9_q0,
        Abuf_9_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address1,
        Abuf_9_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce1,
        Abuf_9_q1 => Abuf_9_q1,
        Abuf_9_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address2,
        Abuf_9_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce2,
        Abuf_9_q2 => Abuf_9_q2,
        Abuf_9_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address3,
        Abuf_9_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce3,
        Abuf_9_q3 => Abuf_9_q3,
        Abuf_10_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address0,
        Abuf_10_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce0,
        Abuf_10_q0 => Abuf_10_q0,
        Abuf_10_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address1,
        Abuf_10_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce1,
        Abuf_10_q1 => Abuf_10_q1,
        Abuf_10_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address2,
        Abuf_10_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce2,
        Abuf_10_q2 => Abuf_10_q2,
        Abuf_10_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address3,
        Abuf_10_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce3,
        Abuf_10_q3 => Abuf_10_q3,
        Abuf_11_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address0,
        Abuf_11_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce0,
        Abuf_11_q0 => Abuf_11_q0,
        Abuf_11_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address1,
        Abuf_11_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce1,
        Abuf_11_q1 => Abuf_11_q1,
        Abuf_11_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address2,
        Abuf_11_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce2,
        Abuf_11_q2 => Abuf_11_q2,
        Abuf_11_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address3,
        Abuf_11_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce3,
        Abuf_11_q3 => Abuf_11_q3,
        Abuf_12_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address0,
        Abuf_12_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce0,
        Abuf_12_q0 => Abuf_12_q0,
        Abuf_12_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address1,
        Abuf_12_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce1,
        Abuf_12_q1 => Abuf_12_q1,
        Abuf_12_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address2,
        Abuf_12_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce2,
        Abuf_12_q2 => Abuf_12_q2,
        Abuf_12_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address3,
        Abuf_12_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce3,
        Abuf_12_q3 => Abuf_12_q3,
        Abuf_13_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address0,
        Abuf_13_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce0,
        Abuf_13_q0 => Abuf_13_q0,
        Abuf_13_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address1,
        Abuf_13_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce1,
        Abuf_13_q1 => Abuf_13_q1,
        Abuf_13_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address2,
        Abuf_13_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce2,
        Abuf_13_q2 => Abuf_13_q2,
        Abuf_13_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address3,
        Abuf_13_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce3,
        Abuf_13_q3 => Abuf_13_q3,
        Abuf_14_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address0,
        Abuf_14_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce0,
        Abuf_14_q0 => Abuf_14_q0,
        Abuf_14_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address1,
        Abuf_14_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce1,
        Abuf_14_q1 => Abuf_14_q1,
        Abuf_14_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address2,
        Abuf_14_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce2,
        Abuf_14_q2 => Abuf_14_q2,
        Abuf_14_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address3,
        Abuf_14_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce3,
        Abuf_14_q3 => Abuf_14_q3,
        Abuf_15_address0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address0,
        Abuf_15_ce0 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce0,
        Abuf_15_q0 => Abuf_15_q0,
        Abuf_15_address1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address1,
        Abuf_15_ce1 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce1,
        Abuf_15_q1 => Abuf_15_q1,
        Abuf_15_address2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address2,
        Abuf_15_ce2 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce2,
        Abuf_15_q2 => Abuf_15_q2,
        Abuf_15_address3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address3,
        Abuf_15_ce3 => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce3,
        Abuf_15_q3 => Abuf_15_q3,
        empty_13 => trunc_ln43_reg_520,
        empty => trunc_ln53_reg_531,
        C_offset => C_offset_read_reg_502);

    control_s_axi_U : component mmult_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        A_offset => A_offset,
        B_offset => B_offset,
        C_offset => C_offset,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    A_m_axi_U : component mmult_A_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_A_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_A_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_A_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_A_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_A_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_A_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_A_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_A_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_A_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_A_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_A_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_A_AWVALID,
        AWREADY => m_axi_A_AWREADY,
        AWADDR => m_axi_A_AWADDR,
        AWID => m_axi_A_AWID,
        AWLEN => m_axi_A_AWLEN,
        AWSIZE => m_axi_A_AWSIZE,
        AWBURST => m_axi_A_AWBURST,
        AWLOCK => m_axi_A_AWLOCK,
        AWCACHE => m_axi_A_AWCACHE,
        AWPROT => m_axi_A_AWPROT,
        AWQOS => m_axi_A_AWQOS,
        AWREGION => m_axi_A_AWREGION,
        AWUSER => m_axi_A_AWUSER,
        WVALID => m_axi_A_WVALID,
        WREADY => m_axi_A_WREADY,
        WDATA => m_axi_A_WDATA,
        WSTRB => m_axi_A_WSTRB,
        WLAST => m_axi_A_WLAST,
        WID => m_axi_A_WID,
        WUSER => m_axi_A_WUSER,
        ARVALID => m_axi_A_ARVALID,
        ARREADY => m_axi_A_ARREADY,
        ARADDR => m_axi_A_ARADDR,
        ARID => m_axi_A_ARID,
        ARLEN => m_axi_A_ARLEN,
        ARSIZE => m_axi_A_ARSIZE,
        ARBURST => m_axi_A_ARBURST,
        ARLOCK => m_axi_A_ARLOCK,
        ARCACHE => m_axi_A_ARCACHE,
        ARPROT => m_axi_A_ARPROT,
        ARQOS => m_axi_A_ARQOS,
        ARREGION => m_axi_A_ARREGION,
        ARUSER => m_axi_A_ARUSER,
        RVALID => m_axi_A_RVALID,
        RREADY => m_axi_A_RREADY,
        RDATA => m_axi_A_RDATA,
        RLAST => m_axi_A_RLAST,
        RID => m_axi_A_RID,
        RUSER => m_axi_A_RUSER,
        RRESP => m_axi_A_RRESP,
        BVALID => m_axi_A_BVALID,
        BREADY => m_axi_A_BREADY,
        BRESP => m_axi_A_BRESP,
        BID => m_axi_A_BID,
        BUSER => m_axi_A_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => A_ARVALID,
        I_ARREADY => A_ARREADY,
        I_ARADDR => A_ARADDR,
        I_ARLEN => A_ARLEN,
        I_RVALID => A_RVALID,
        I_RREADY => A_RREADY,
        I_RDATA => A_RDATA,
        I_RFIFONUM => A_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => A_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => A_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => A_BVALID,
        I_BREADY => ap_const_logic_0);

    B_m_axi_U : component mmult_B_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_B_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_B_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_B_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_B_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_B_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_B_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_B_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_B_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_B_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_B_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_B_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_B_AWVALID,
        AWREADY => m_axi_B_AWREADY,
        AWADDR => m_axi_B_AWADDR,
        AWID => m_axi_B_AWID,
        AWLEN => m_axi_B_AWLEN,
        AWSIZE => m_axi_B_AWSIZE,
        AWBURST => m_axi_B_AWBURST,
        AWLOCK => m_axi_B_AWLOCK,
        AWCACHE => m_axi_B_AWCACHE,
        AWPROT => m_axi_B_AWPROT,
        AWQOS => m_axi_B_AWQOS,
        AWREGION => m_axi_B_AWREGION,
        AWUSER => m_axi_B_AWUSER,
        WVALID => m_axi_B_WVALID,
        WREADY => m_axi_B_WREADY,
        WDATA => m_axi_B_WDATA,
        WSTRB => m_axi_B_WSTRB,
        WLAST => m_axi_B_WLAST,
        WID => m_axi_B_WID,
        WUSER => m_axi_B_WUSER,
        ARVALID => m_axi_B_ARVALID,
        ARREADY => m_axi_B_ARREADY,
        ARADDR => m_axi_B_ARADDR,
        ARID => m_axi_B_ARID,
        ARLEN => m_axi_B_ARLEN,
        ARSIZE => m_axi_B_ARSIZE,
        ARBURST => m_axi_B_ARBURST,
        ARLOCK => m_axi_B_ARLOCK,
        ARCACHE => m_axi_B_ARCACHE,
        ARPROT => m_axi_B_ARPROT,
        ARQOS => m_axi_B_ARQOS,
        ARREGION => m_axi_B_ARREGION,
        ARUSER => m_axi_B_ARUSER,
        RVALID => m_axi_B_RVALID,
        RREADY => m_axi_B_RREADY,
        RDATA => m_axi_B_RDATA,
        RLAST => m_axi_B_RLAST,
        RID => m_axi_B_RID,
        RUSER => m_axi_B_RUSER,
        RRESP => m_axi_B_RRESP,
        BVALID => m_axi_B_BVALID,
        BREADY => m_axi_B_BREADY,
        BRESP => m_axi_B_BRESP,
        BID => m_axi_B_BID,
        BUSER => m_axi_B_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => B_ARVALID,
        I_ARREADY => B_ARREADY,
        I_ARADDR => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARADDR,
        I_ARLEN => grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARLEN,
        I_RVALID => B_RVALID,
        I_RREADY => B_RREADY,
        I_RDATA => B_RDATA,
        I_RFIFONUM => B_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => B_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => B_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => B_BVALID,
        I_BREADY => ap_const_logic_0);

    C_m_axi_U : component mmult_C_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 4,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_C_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_C_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_C_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_C_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_C_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_C_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_C_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_C_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_C_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_C_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_C_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_C_AWVALID,
        AWREADY => m_axi_C_AWREADY,
        AWADDR => m_axi_C_AWADDR,
        AWID => m_axi_C_AWID,
        AWLEN => m_axi_C_AWLEN,
        AWSIZE => m_axi_C_AWSIZE,
        AWBURST => m_axi_C_AWBURST,
        AWLOCK => m_axi_C_AWLOCK,
        AWCACHE => m_axi_C_AWCACHE,
        AWPROT => m_axi_C_AWPROT,
        AWQOS => m_axi_C_AWQOS,
        AWREGION => m_axi_C_AWREGION,
        AWUSER => m_axi_C_AWUSER,
        WVALID => m_axi_C_WVALID,
        WREADY => m_axi_C_WREADY,
        WDATA => m_axi_C_WDATA,
        WSTRB => m_axi_C_WSTRB,
        WLAST => m_axi_C_WLAST,
        WID => m_axi_C_WID,
        WUSER => m_axi_C_WUSER,
        ARVALID => m_axi_C_ARVALID,
        ARREADY => m_axi_C_ARREADY,
        ARADDR => m_axi_C_ARADDR,
        ARID => m_axi_C_ARID,
        ARLEN => m_axi_C_ARLEN,
        ARSIZE => m_axi_C_ARSIZE,
        ARBURST => m_axi_C_ARBURST,
        ARLOCK => m_axi_C_ARLOCK,
        ARCACHE => m_axi_C_ARCACHE,
        ARPROT => m_axi_C_ARPROT,
        ARQOS => m_axi_C_ARQOS,
        ARREGION => m_axi_C_ARREGION,
        ARUSER => m_axi_C_ARUSER,
        RVALID => m_axi_C_RVALID,
        RREADY => m_axi_C_RREADY,
        RDATA => m_axi_C_RDATA,
        RLAST => m_axi_C_RLAST,
        RID => m_axi_C_RID,
        RUSER => m_axi_C_RUSER,
        RRESP => m_axi_C_RRESP,
        BVALID => m_axi_C_BVALID,
        BREADY => m_axi_C_BREADY,
        BRESP => m_axi_C_BRESP,
        BID => m_axi_C_BID,
        BUSER => m_axi_C_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => C_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARLEN => ap_const_lv32_0,
        I_RVALID => C_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => C_RDATA,
        I_RFIFONUM => C_RFIFONUM,
        I_AWVALID => C_AWVALID,
        I_AWREADY => C_AWREADY,
        I_AWADDR => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWADDR,
        I_AWLEN => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWLEN,
        I_WVALID => C_WVALID,
        I_WREADY => C_WREADY,
        I_WDATA => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WDATA,
        I_WSTRB => grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WSTRB,
        I_BVALID => C_BVALID,
        I_BREADY => C_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten153_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten153_fu_106 <= ap_const_lv3_0;
            elsif (((icmp_ln43_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten153_fu_106 <= add_ln43_2_fu_375_p2;
            end if; 
        end if;
    end process;

    m_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                m_fu_102 <= ap_const_lv2_0;
            elsif (((icmp_ln43_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                m_fu_102 <= select_ln43_1_fu_407_p3;
            end if; 
        end if;
    end process;

    n_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_fu_98 <= ap_const_lv2_0;
            elsif (((icmp_ln43_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                n_fu_98 <= add_ln44_fu_450_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                A_offset_read_reg_512 <= A_offset;
                B_offset_read_reg_507 <= B_offset;
                C_offset_read_reg_502 <= C_offset;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                sext_ln46_mid2_v_reg_525 <= add_ln43_1_fu_431_p2(63 downto 2);
                trunc_ln43_reg_520 <= trunc_ln43_fu_415_p1;
                trunc_ln53_reg_531 <= trunc_ln53_fu_446_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state2, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_done, A_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state14, icmp_ln43_fu_369_p2, ap_block_state12_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln43_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = A_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;

    A_ARADDR_assign_proc : process(ap_CS_fsm_state3, grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARADDR, A_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state12, sext_ln43_fu_471_p1)
    begin
        if (((ap_const_logic_1 = A_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_ARADDR <= sext_ln43_fu_471_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            A_ARADDR <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARADDR;
        else 
            A_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_ARLEN_assign_proc : process(ap_CS_fsm_state3, grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARLEN, A_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = A_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_ARLEN <= ap_const_lv32_800;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            A_ARLEN <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARLEN;
        else 
            A_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARVALID, A_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = A_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            A_ARVALID <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_ARVALID;
        else 
            A_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    A_RREADY_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_RREADY, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            A_RREADY <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_m_axi_A_RREADY;
        else 
            A_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    A_blk_n_AR_assign_proc : process(m_axi_A_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_blk_n_AR <= m_axi_A_ARREADY;
        else 
            A_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    Abuf_10_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_10_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_10_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_address0;
        else 
            Abuf_10_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_10_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_10_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_10_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_ce0;
        else 
            Abuf_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_10_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_10_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce1;
        else 
            Abuf_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_10_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_10_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce2;
        else 
            Abuf_10_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_10_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_10_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_10_ce3;
        else 
            Abuf_10_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_10_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_10_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_10_we0;
        else 
            Abuf_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_11_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_11_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_11_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_address0;
        else 
            Abuf_11_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_11_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_11_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_11_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_ce0;
        else 
            Abuf_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_11_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_11_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce1;
        else 
            Abuf_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_11_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_11_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce2;
        else 
            Abuf_11_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_11_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_11_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_11_ce3;
        else 
            Abuf_11_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_11_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_11_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_11_we0;
        else 
            Abuf_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_12_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_12_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_12_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_address0;
        else 
            Abuf_12_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_12_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_12_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_12_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_ce0;
        else 
            Abuf_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_12_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_12_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce1;
        else 
            Abuf_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_12_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_12_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce2;
        else 
            Abuf_12_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_12_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_12_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_12_ce3;
        else 
            Abuf_12_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_12_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_12_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_12_we0;
        else 
            Abuf_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_13_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_13_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_13_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_address0;
        else 
            Abuf_13_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_13_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_13_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_13_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_ce0;
        else 
            Abuf_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_13_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_13_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce1;
        else 
            Abuf_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_13_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_13_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce2;
        else 
            Abuf_13_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_13_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_13_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_13_ce3;
        else 
            Abuf_13_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_13_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_13_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_13_we0;
        else 
            Abuf_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_14_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_14_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_14_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_address0;
        else 
            Abuf_14_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_14_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_14_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_14_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_ce0;
        else 
            Abuf_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_14_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_14_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce1;
        else 
            Abuf_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_14_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_14_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce2;
        else 
            Abuf_14_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_14_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_14_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_14_ce3;
        else 
            Abuf_14_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_14_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_14_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_14_we0;
        else 
            Abuf_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_15_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_15_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_15_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_address0;
        else 
            Abuf_15_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_15_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_15_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_15_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_ce0;
        else 
            Abuf_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_15_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_15_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce1;
        else 
            Abuf_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_15_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_15_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce2;
        else 
            Abuf_15_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_15_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_15_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_15_ce3;
        else 
            Abuf_15_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_15_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_15_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_15_we0;
        else 
            Abuf_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_1_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_1_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_1_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_address0;
        else 
            Abuf_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_1_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_1_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_1_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_ce0;
        else 
            Abuf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_1_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_1_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce1;
        else 
            Abuf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_1_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_1_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce2;
        else 
            Abuf_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_1_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_1_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_1_ce3;
        else 
            Abuf_1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_1_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_1_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_1_we0;
        else 
            Abuf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_2_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_2_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_2_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_address0;
        else 
            Abuf_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_2_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_2_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_2_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_ce0;
        else 
            Abuf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_2_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_2_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce1;
        else 
            Abuf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_2_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_2_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce2;
        else 
            Abuf_2_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_2_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_2_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_2_ce3;
        else 
            Abuf_2_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_2_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_2_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_2_we0;
        else 
            Abuf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_3_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_3_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_3_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_address0;
        else 
            Abuf_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_3_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_3_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_3_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_ce0;
        else 
            Abuf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_3_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_3_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce1;
        else 
            Abuf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_3_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_3_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce2;
        else 
            Abuf_3_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_3_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_3_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_3_ce3;
        else 
            Abuf_3_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_3_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_3_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_3_we0;
        else 
            Abuf_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_4_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_4_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_4_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_address0;
        else 
            Abuf_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_4_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_4_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_4_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_ce0;
        else 
            Abuf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_4_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_4_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce1;
        else 
            Abuf_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_4_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_4_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce2;
        else 
            Abuf_4_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_4_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_4_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_4_ce3;
        else 
            Abuf_4_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_4_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_4_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_4_we0;
        else 
            Abuf_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_5_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_5_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_5_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_address0;
        else 
            Abuf_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_5_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_5_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_5_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_ce0;
        else 
            Abuf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_5_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_5_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce1;
        else 
            Abuf_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_5_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_5_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce2;
        else 
            Abuf_5_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_5_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_5_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_5_ce3;
        else 
            Abuf_5_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_5_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_5_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_5_we0;
        else 
            Abuf_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_6_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_6_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_6_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_address0;
        else 
            Abuf_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_6_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_6_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_6_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_ce0;
        else 
            Abuf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_6_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_6_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce1;
        else 
            Abuf_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_6_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_6_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce2;
        else 
            Abuf_6_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_6_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_6_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_6_ce3;
        else 
            Abuf_6_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_6_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_6_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_6_we0;
        else 
            Abuf_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_7_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_7_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_7_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_address0;
        else 
            Abuf_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_7_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_7_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_7_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_ce0;
        else 
            Abuf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_7_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_7_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce1;
        else 
            Abuf_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_7_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_7_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce2;
        else 
            Abuf_7_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_7_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_7_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_7_ce3;
        else 
            Abuf_7_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_7_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_7_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_7_we0;
        else 
            Abuf_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_8_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_8_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_8_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_address0;
        else 
            Abuf_8_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_8_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_8_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_8_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_ce0;
        else 
            Abuf_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_8_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_8_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce1;
        else 
            Abuf_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_8_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_8_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce2;
        else 
            Abuf_8_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_8_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_8_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_8_ce3;
        else 
            Abuf_8_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_8_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_8_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_8_we0;
        else 
            Abuf_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_9_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_9_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_9_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_address0;
        else 
            Abuf_9_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_9_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_9_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_9_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_ce0;
        else 
            Abuf_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_9_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_9_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce1;
        else 
            Abuf_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_9_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_9_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce2;
        else 
            Abuf_9_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_9_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_9_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_9_ce3;
        else 
            Abuf_9_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_9_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_9_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_9_we0;
        else 
            Abuf_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_address0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_address0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_address0;
        else 
            Abuf_address0 <= "XXXXXXX";
        end if; 
    end process;


    Abuf_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_ce0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_ce0;
        else 
            Abuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce1;
        else 
            Abuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce2;
        else 
            Abuf_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Abuf_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Abuf_ce3;
        else 
            Abuf_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Abuf_we0_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Abuf_we0 <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_Abuf_we0;
        else 
            Abuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_ARVALID_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARVALID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            B_ARVALID <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_ARVALID;
        else 
            B_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    B_RREADY_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_RREADY, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            B_RREADY <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_m_axi_B_RREADY;
        else 
            B_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_10_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_10_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_10_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_address0;
        else 
            Bbuf_10_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_10_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_10_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_10_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_ce0;
        else 
            Bbuf_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_10_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_10_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce1;
        else 
            Bbuf_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_10_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_10_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce2;
        else 
            Bbuf_10_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_10_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_10_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_10_ce3;
        else 
            Bbuf_10_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_10_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_10_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_10_we0;
        else 
            Bbuf_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_11_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_11_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_11_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_address0;
        else 
            Bbuf_11_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_11_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_11_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_11_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_ce0;
        else 
            Bbuf_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_11_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_11_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce1;
        else 
            Bbuf_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_11_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_11_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce2;
        else 
            Bbuf_11_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_11_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_11_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_11_ce3;
        else 
            Bbuf_11_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_11_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_11_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_11_we0;
        else 
            Bbuf_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_12_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_12_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_12_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_address0;
        else 
            Bbuf_12_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_12_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_12_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_12_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_ce0;
        else 
            Bbuf_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_12_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_12_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce1;
        else 
            Bbuf_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_12_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_12_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce2;
        else 
            Bbuf_12_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_12_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_12_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_12_ce3;
        else 
            Bbuf_12_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_12_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_12_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_12_we0;
        else 
            Bbuf_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_13_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_13_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_13_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_address0;
        else 
            Bbuf_13_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_13_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_13_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_13_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_ce0;
        else 
            Bbuf_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_13_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_13_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce1;
        else 
            Bbuf_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_13_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_13_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce2;
        else 
            Bbuf_13_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_13_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_13_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_13_ce3;
        else 
            Bbuf_13_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_13_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_13_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_13_we0;
        else 
            Bbuf_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_14_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_14_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_14_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_address0;
        else 
            Bbuf_14_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_14_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_14_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_14_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_ce0;
        else 
            Bbuf_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_14_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_14_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce1;
        else 
            Bbuf_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_14_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_14_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce2;
        else 
            Bbuf_14_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_14_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_14_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_14_ce3;
        else 
            Bbuf_14_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_14_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_14_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_14_we0;
        else 
            Bbuf_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_15_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_15_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_15_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_address0;
        else 
            Bbuf_15_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_15_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_15_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_15_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_ce0;
        else 
            Bbuf_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_15_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_15_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce1;
        else 
            Bbuf_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_15_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_15_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce2;
        else 
            Bbuf_15_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_15_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_15_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_15_ce3;
        else 
            Bbuf_15_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_15_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_15_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_15_we0;
        else 
            Bbuf_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_1_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_1_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_1_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_address0;
        else 
            Bbuf_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_1_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_1_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_1_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_ce0;
        else 
            Bbuf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_1_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_1_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce1;
        else 
            Bbuf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_1_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_1_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce2;
        else 
            Bbuf_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_1_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_1_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_1_ce3;
        else 
            Bbuf_1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_1_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_1_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_1_we0;
        else 
            Bbuf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_2_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_2_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_2_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_address0;
        else 
            Bbuf_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_2_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_2_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_2_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_ce0;
        else 
            Bbuf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_2_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_2_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce1;
        else 
            Bbuf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_2_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_2_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce2;
        else 
            Bbuf_2_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_2_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_2_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_2_ce3;
        else 
            Bbuf_2_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_2_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_2_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_2_we0;
        else 
            Bbuf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_3_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_3_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_3_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_address0;
        else 
            Bbuf_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_3_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_3_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_3_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_ce0;
        else 
            Bbuf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_3_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_3_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce1;
        else 
            Bbuf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_3_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_3_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce2;
        else 
            Bbuf_3_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_3_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_3_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_3_ce3;
        else 
            Bbuf_3_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_3_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_3_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_3_we0;
        else 
            Bbuf_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_4_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_4_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_4_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_address0;
        else 
            Bbuf_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_4_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_4_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_4_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_ce0;
        else 
            Bbuf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_4_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_4_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce1;
        else 
            Bbuf_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_4_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_4_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce2;
        else 
            Bbuf_4_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_4_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_4_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_4_ce3;
        else 
            Bbuf_4_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_4_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_4_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_4_we0;
        else 
            Bbuf_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_5_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_5_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_5_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_address0;
        else 
            Bbuf_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_5_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_5_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_5_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_ce0;
        else 
            Bbuf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_5_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_5_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce1;
        else 
            Bbuf_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_5_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_5_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce2;
        else 
            Bbuf_5_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_5_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_5_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_5_ce3;
        else 
            Bbuf_5_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_5_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_5_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_5_we0;
        else 
            Bbuf_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_6_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_6_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_6_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_address0;
        else 
            Bbuf_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_6_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_6_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_6_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_ce0;
        else 
            Bbuf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_6_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_6_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce1;
        else 
            Bbuf_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_6_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_6_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce2;
        else 
            Bbuf_6_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_6_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_6_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_6_ce3;
        else 
            Bbuf_6_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_6_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_6_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_6_we0;
        else 
            Bbuf_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_7_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_7_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_7_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_address0;
        else 
            Bbuf_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_7_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_7_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_7_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_ce0;
        else 
            Bbuf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_7_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_7_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce1;
        else 
            Bbuf_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_7_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_7_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce2;
        else 
            Bbuf_7_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_7_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_7_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_7_ce3;
        else 
            Bbuf_7_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_7_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_7_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_7_we0;
        else 
            Bbuf_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_8_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_8_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_8_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_address0;
        else 
            Bbuf_8_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_8_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_8_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_8_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_ce0;
        else 
            Bbuf_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_8_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_8_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce1;
        else 
            Bbuf_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_8_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_8_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce2;
        else 
            Bbuf_8_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_8_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_8_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_8_ce3;
        else 
            Bbuf_8_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_8_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_8_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_8_we0;
        else 
            Bbuf_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_9_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_9_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_9_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_address0;
        else 
            Bbuf_9_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_9_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_9_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_9_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_ce0;
        else 
            Bbuf_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_9_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_9_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce1;
        else 
            Bbuf_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_9_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_9_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce2;
        else 
            Bbuf_9_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_9_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_9_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_9_ce3;
        else 
            Bbuf_9_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_9_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_9_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_9_we0;
        else 
            Bbuf_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_address0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_address0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_address0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_address0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_address0;
        else 
            Bbuf_address0 <= "XXXXXXX";
        end if; 
    end process;


    Bbuf_ce0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_ce0, grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_ce0 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_ce0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_ce0;
        else 
            Bbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_ce1_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_ce1 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce1;
        else 
            Bbuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_ce2_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce2, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_ce2 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce2;
        else 
            Bbuf_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_ce3_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce3, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Bbuf_ce3 <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_Bbuf_ce3;
        else 
            Bbuf_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    Bbuf_we0_assign_proc : process(grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Bbuf_we0 <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_Bbuf_we0;
        else 
            Bbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    C_AWVALID_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWVALID, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            C_AWVALID <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_AWVALID;
        else 
            C_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    C_BREADY_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_BREADY, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            C_BREADY <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_BREADY;
        else 
            C_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    C_WVALID_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WVALID, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            C_WVALID <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_m_axi_C_WVALID;
        else 
            C_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    add_ln43_1_fu_431_p2 <= std_logic_vector(unsigned(zext_ln43_fu_427_p1) + unsigned(A_offset_read_reg_512));
    add_ln43_2_fu_375_p2 <= std_logic_vector(unsigned(indvar_flatten153_fu_106) + unsigned(ap_const_lv3_1));
    add_ln43_fu_387_p2 <= std_logic_vector(unsigned(m_fu_102) + unsigned(ap_const_lv2_1));
    add_ln44_fu_450_p2 <= std_logic_vector(unsigned(select_ln43_fu_399_p3) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_done)
    begin
        if ((grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(A_ARREADY)
    begin
        if ((ap_const_logic_0 = A_ARREADY)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_on_subcall_done_assign_proc : process(grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_done, grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_done)
    begin
                ap_block_state12_on_subcall_done <= ((grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_done = ap_const_logic_0) or (grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln43_fu_369_p2)
    begin
        if (((icmp_ln43_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln43_fu_369_p2)
    begin
        if (((icmp_ln43_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start <= grp_mmult_Pipeline_LOOP3_LOOP4_fu_310_ap_start_reg;
    grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start <= grp_mmult_Pipeline_LOOPA1_LOOPA2_fu_263_ap_start_reg;
    grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start <= grp_mmult_Pipeline_LOOPB1_LOOPB2_fu_286_ap_start_reg;
    icmp_ln43_fu_369_p2 <= "1" when (indvar_flatten153_fu_106 = ap_const_lv3_4) else "0";
    icmp_ln44_fu_393_p2 <= "1" when (n_fu_98 = ap_const_lv2_2) else "0";
    select_ln43_1_fu_407_p3 <= 
        add_ln43_fu_387_p2 when (icmp_ln44_fu_393_p2(0) = '1') else 
        m_fu_102;
    select_ln43_fu_399_p3 <= 
        ap_const_lv2_0 when (icmp_ln44_fu_393_p2(0) = '1') else 
        n_fu_98;
        sext_ln43_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln46_mid2_v_reg_525),64));

    sext_ln46_mid2_v_v_v_v_v_fu_419_p3 <= (trunc_ln43_fu_415_p1 & ap_const_lv13_0);
    trunc_ln43_fu_415_p1 <= select_ln43_1_fu_407_p3(1 - 1 downto 0);
    trunc_ln53_fu_446_p1 <= select_ln43_fu_399_p3(1 - 1 downto 0);
    zext_ln43_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln46_mid2_v_v_v_v_v_fu_419_p3),64));
end behav;
