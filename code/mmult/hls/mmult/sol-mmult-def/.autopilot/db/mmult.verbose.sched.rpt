

================================================================
== Vitis HLS Report for 'mmult'
================================================================
* Date:           Fri Apr 19 11:04:55 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        mmult
* Solution:       sol-mmult-def (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020i-clg400-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  8.014 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2235|     2235|  22.350 us|  22.350 us|  2236|  2236|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 19 [1/1] (1.00ns)   --->   "%C_offset_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %C_offset"   --->   Operation 19 'read' 'C_offset_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 20 [1/1] (1.00ns)   --->   "%B_offset_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %B_offset"   --->   Operation 20 'read' 'B_offset_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%A_offset_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %A_offset"   --->   Operation 21 'read' 'A_offset_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%Abuf = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 22 'alloca' 'Abuf' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%Abuf_1 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 23 'alloca' 'Abuf_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%Abuf_2 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 24 'alloca' 'Abuf_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%Abuf_3 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 25 'alloca' 'Abuf_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%Abuf_4 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 26 'alloca' 'Abuf_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%Abuf_5 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 27 'alloca' 'Abuf_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%Abuf_6 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 28 'alloca' 'Abuf_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%Abuf_7 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 29 'alloca' 'Abuf_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%Abuf_8 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 30 'alloca' 'Abuf_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%Abuf_9 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 31 'alloca' 'Abuf_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%Abuf_10 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 32 'alloca' 'Abuf_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%Abuf_11 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 33 'alloca' 'Abuf_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%Abuf_12 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 34 'alloca' 'Abuf_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%Abuf_13 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 35 'alloca' 'Abuf_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%Abuf_14 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 36 'alloca' 'Abuf_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%Abuf_15 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 37 'alloca' 'Abuf_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%Bbuf = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 38 'alloca' 'Bbuf' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%Bbuf_1 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 39 'alloca' 'Bbuf_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%Bbuf_2 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 40 'alloca' 'Bbuf_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%Bbuf_3 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 41 'alloca' 'Bbuf_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%Bbuf_4 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 42 'alloca' 'Bbuf_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%Bbuf_5 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 43 'alloca' 'Bbuf_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%Bbuf_6 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 44 'alloca' 'Bbuf_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%Bbuf_7 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 45 'alloca' 'Bbuf_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%Bbuf_8 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 46 'alloca' 'Bbuf_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%Bbuf_9 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 47 'alloca' 'Bbuf_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%Bbuf_10 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 48 'alloca' 'Bbuf_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%Bbuf_11 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 49 'alloca' 'Bbuf_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%Bbuf_12 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 50 'alloca' 'Bbuf_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%Bbuf_13 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 51 'alloca' 'Bbuf_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%Bbuf_14 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 52 'alloca' 'Bbuf_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%Bbuf_15 = alloca i64 1" [../src/mmult.cpp:23]   --->   Operation 53 'alloca' 'Bbuf_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %A_offset_read, i32 2, i32 63" [../src/mmult.cpp:29]   --->   Operation 54 'partselect' 'trunc_ln29_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln29_2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %B_offset_read, i32 2, i32 63" [../src/mmult.cpp:29]   --->   Operation 55 'partselect' 'trunc_ln29_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %C_offset_read, i32 2, i32 63" [../src/mmult.cpp:37]   --->   Operation 56 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln29 = sext i62 %trunc_ln29_1" [../src/mmult.cpp:29]   --->   Operation 57 'sext' 'sext_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i32 %A, i64 %sext_ln29" [../src/mmult.cpp:29]   --->   Operation 58 'getelementptr' 'A_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [8/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 59 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln29_1 = sext i62 %trunc_ln29_2" [../src/mmult.cpp:29]   --->   Operation 60 'sext' 'sext_ln29_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i32 %B, i64 %sext_ln29_1" [../src/mmult.cpp:29]   --->   Operation 61 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [8/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 62 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 63 [7/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 63 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 64 [7/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 64 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 65 [6/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 65 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 66 [6/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 66 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 67 [5/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 67 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 68 [5/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 68 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 69 [4/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 69 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 70 [4/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 70 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 71 [3/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 71 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 72 [3/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 72 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 73 [2/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 73 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 74 [2/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 74 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 75 [1/8] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %A_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 75 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 76 [1/8] (7.30ns)   --->   "%empty_20 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %B_addr, i32 1024" [../src/mmult.cpp:29]   --->   Operation 76 'readreq' 'empty_20' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 77 [2/2] (0.00ns)   --->   "%call_ln29 = call void @mmult_Pipeline_LOOP1_LOOP2, i32 %B, i32 %A, i62 %trunc_ln29_2, i62 %trunc_ln29_1, i32 %Bbuf, i32 %Bbuf_1, i32 %Bbuf_2, i32 %Bbuf_3, i32 %Bbuf_4, i32 %Bbuf_5, i32 %Bbuf_6, i32 %Bbuf_7, i32 %Bbuf_8, i32 %Bbuf_9, i32 %Bbuf_10, i32 %Bbuf_11, i32 %Bbuf_12, i32 %Bbuf_13, i32 %Bbuf_14, i32 %Bbuf_15, i32 %Abuf, i32 %Abuf_1, i32 %Abuf_2, i32 %Abuf_3, i32 %Abuf_4, i32 %Abuf_5, i32 %Abuf_6, i32 %Abuf_7, i32 %Abuf_8, i32 %Abuf_9, i32 %Abuf_10, i32 %Abuf_11, i32 %Abuf_12, i32 %Abuf_13, i32 %Abuf_14, i32 %Abuf_15" [../src/mmult.cpp:29]   --->   Operation 77 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 78 [1/2] (0.00ns)   --->   "%call_ln29 = call void @mmult_Pipeline_LOOP1_LOOP2, i32 %B, i32 %A, i62 %trunc_ln29_2, i62 %trunc_ln29_1, i32 %Bbuf, i32 %Bbuf_1, i32 %Bbuf_2, i32 %Bbuf_3, i32 %Bbuf_4, i32 %Bbuf_5, i32 %Bbuf_6, i32 %Bbuf_7, i32 %Bbuf_8, i32 %Bbuf_9, i32 %Bbuf_10, i32 %Bbuf_11, i32 %Bbuf_12, i32 %Bbuf_13, i32 %Bbuf_14, i32 %Bbuf_15, i32 %Abuf, i32 %Abuf_1, i32 %Abuf_2, i32 %Abuf_3, i32 %Abuf_4, i32 %Abuf_5, i32 %Abuf_6, i32 %Abuf_7, i32 %Abuf_8, i32 %Abuf_9, i32 %Abuf_10, i32 %Abuf_11, i32 %Abuf_12, i32 %Abuf_13, i32 %Abuf_14, i32 %Abuf_15" [../src/mmult.cpp:29]   --->   Operation 78 'call' 'call_ln29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln37 = sext i62 %trunc_ln" [../src/mmult.cpp:37]   --->   Operation 79 'sext' 'sext_ln37' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 80 [1/1] (0.00ns)   --->   "%C_addr = getelementptr i32 %C, i64 %sext_ln37" [../src/mmult.cpp:37]   --->   Operation 80 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 81 [1/1] (7.30ns)   --->   "%empty_21 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %C_addr, i32 1024" [../src/mmult.cpp:37]   --->   Operation 81 'writereq' 'empty_21' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 82 [2/2] (0.00ns)   --->   "%call_ln37 = call void @mmult_Pipeline_LOOP3_LOOP4, i32 %C, i32 %Bbuf, i32 %Bbuf_1, i32 %Bbuf_2, i32 %Bbuf_3, i32 %Bbuf_4, i32 %Bbuf_5, i32 %Bbuf_6, i32 %Bbuf_7, i32 %Bbuf_8, i32 %Bbuf_9, i32 %Bbuf_10, i32 %Bbuf_11, i32 %Bbuf_12, i32 %Bbuf_13, i32 %Bbuf_14, i32 %Bbuf_15, i62 %trunc_ln, i32 %Abuf, i32 %Abuf_1, i32 %Abuf_2, i32 %Abuf_3, i32 %Abuf_4, i32 %Abuf_5, i32 %Abuf_6, i32 %Abuf_7, i32 %Abuf_8, i32 %Abuf_9, i32 %Abuf_10, i32 %Abuf_11, i32 %Abuf_12, i32 %Abuf_13, i32 %Abuf_14, i32 %Abuf_15" [../src/mmult.cpp:37]   --->   Operation 82 'call' 'call_ln37' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 83 [1/2] (0.00ns)   --->   "%call_ln37 = call void @mmult_Pipeline_LOOP3_LOOP4, i32 %C, i32 %Bbuf, i32 %Bbuf_1, i32 %Bbuf_2, i32 %Bbuf_3, i32 %Bbuf_4, i32 %Bbuf_5, i32 %Bbuf_6, i32 %Bbuf_7, i32 %Bbuf_8, i32 %Bbuf_9, i32 %Bbuf_10, i32 %Bbuf_11, i32 %Bbuf_12, i32 %Bbuf_13, i32 %Bbuf_14, i32 %Bbuf_15, i62 %trunc_ln, i32 %Abuf, i32 %Abuf_1, i32 %Abuf_2, i32 %Abuf_3, i32 %Abuf_4, i32 %Abuf_5, i32 %Abuf_6, i32 %Abuf_7, i32 %Abuf_8, i32 %Abuf_9, i32 %Abuf_10, i32 %Abuf_11, i32 %Abuf_12, i32 %Abuf_13, i32 %Abuf_14, i32 %Abuf_15" [../src/mmult.cpp:37]   --->   Operation 83 'call' 'call_ln37' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 84 [5/5] (7.30ns)   --->   "%empty_22 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %C_addr" [../src/mmult.cpp:48]   --->   Operation 84 'writeresp' 'empty_22' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 85 [4/5] (7.30ns)   --->   "%empty_22 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %C_addr" [../src/mmult.cpp:48]   --->   Operation 85 'writeresp' 'empty_22' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 86 [3/5] (7.30ns)   --->   "%empty_22 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %C_addr" [../src/mmult.cpp:48]   --->   Operation 86 'writeresp' 'empty_22' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 87 [2/5] (7.30ns)   --->   "%empty_22 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %C_addr" [../src/mmult.cpp:48]   --->   Operation 87 'writeresp' 'empty_22' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 88 [1/1] (0.00ns)   --->   "%spectopmodule_ln15 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_11" [../src/mmult.cpp:15]   --->   Operation 88 'spectopmodule' 'spectopmodule_ln15' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 89 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %A, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_2, void @empty_10, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 89 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 90 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %A"   --->   Operation 90 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 91 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %B, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_3, void @empty_10, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 91 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 92 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %B"   --->   Operation 92 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 93 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %C, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_4, void @empty_10, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 93 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 94 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %C"   --->   Operation 94 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 95 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %A_offset, void @empty_5, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_12, void @empty_6, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 95 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 96 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %A_offset, void @empty_7, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 96 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 97 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %B_offset, void @empty_5, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_12, void @empty_8, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 97 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 98 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %B_offset, void @empty_7, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 98 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 99 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %C_offset, void @empty_5, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_12, void @empty_9, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 99 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 100 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %C_offset, void @empty_7, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 100 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 101 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_5, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_12, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 101 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 102 [1/5] (7.30ns)   --->   "%empty_22 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %C_addr" [../src/mmult.cpp:48]   --->   Operation 102 'writeresp' 'empty_22' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 103 [1/1] (0.00ns)   --->   "%ret_ln48 = ret" [../src/mmult.cpp:48]   --->   Operation 103 'ret' 'ret_ln48' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('C_offset_read') on port 'C_offset' [21]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('A_addr', ../src/mmult.cpp:29) [58]  (0.000 ns)
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty', ../src/mmult.cpp:29) on port 'A' (../src/mmult.cpp:29) [59]  (7.300 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('C_addr', ../src/mmult.cpp:37) [67]  (0.000 ns)
	bus request operation ('empty_21', ../src/mmult.cpp:37) on port 'C' (../src/mmult.cpp:37) [68]  (7.300 ns)

 <State 12>: 0.000ns
The critical path consists of the following:

 <State 13>: 0.000ns
The critical path consists of the following:

 <State 14>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_22', ../src/mmult.cpp:48) on port 'C' (../src/mmult.cpp:48) [70]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_22', ../src/mmult.cpp:48) on port 'C' (../src/mmult.cpp:48) [70]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_22', ../src/mmult.cpp:48) on port 'C' (../src/mmult.cpp:48) [70]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_22', ../src/mmult.cpp:48) on port 'C' (../src/mmult.cpp:48) [70]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_22', ../src/mmult.cpp:48) on port 'C' (../src/mmult.cpp:48) [70]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
